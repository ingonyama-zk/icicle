#include <stdbool.h>
#include <cuda.h>
// ve_mod_mult.h

#ifndef _{{.CurveName}}_VEC_MULT_H
#define _{{.CurveName}}_VEC_MULT_H

#ifdef __cplusplus
extern "C" {
#endif

typedef struct {{.CurveName}}_projective_t {{.CurveName}}_projective_t;
typedef struct {{.CurveName}}_scalar_t {{.CurveName}}_scalar_t;

int32_t vec_mod_mult_point_{{.Prefix}}({{.CurveName}}_projective_t *inout, {{.CurveName}}_scalar_t *scalar_vec, size_t n_elments, size_t device_id);
int32_t vec_mod_mult_scalar_{{.Prefix}}({{.CurveName}}_scalar_t *inout, {{.CurveName}}_scalar_t *scalar_vec, size_t n_elments, size_t device_id);
int32_t matrix_vec_mod_mult_{{.Prefix}}({{.CurveName}}_scalar_t *matrix_flattened, {{.CurveName}}_scalar_t *input, {{.CurveName}}_scalar_t *output, size_t n_elments, size_t device_id);


#ifdef __cplusplus
}
#endif

#endif /* _{{.CurveName}}_VEC_MULT_H */
