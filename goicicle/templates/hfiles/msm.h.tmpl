#include <cuda.h>
#include <cuda_runtime.h>
#include <stdbool.h>
// msm.h

#ifndef _{{.CurveNameUpperCase}}_MSM_H
#define _{{.CurveNameUpperCase}}_MSM_H

#ifdef __cplusplus
extern "C" {
#endif

// Incomplete declaration of {{.CurveNameUpperCase}} projective and affine structs
typedef struct {{.CurveNameUpperCase}}_projective_t {{.CurveNameUpperCase}}_projective_t;
typedef struct {{.CurveNameUpperCase}}_g2_projective_t {{.CurveNameUpperCase}}_g2_projective_t;
typedef struct {{.CurveNameUpperCase}}_affine_t {{.CurveNameUpperCase}}_affine_t;
typedef struct {{.CurveNameUpperCase}}_g2_affine_t {{.CurveNameUpperCase}}_g2_affine_t;
typedef struct {{.CurveNameUpperCase}}_scalar_t {{.CurveNameUpperCase}}_scalar_t;
typedef cudaStream_t CudaStream_t;

int msm_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_projective_t* out, {{.CurveNameUpperCase}}_affine_t* points, {{.CurveNameUpperCase}}_scalar_t* scalars, size_t count, size_t device_id);

int msm_batch_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_projective_t* out,
  {{.CurveNameUpperCase}}_affine_t* points,
  {{.CurveNameUpperCase}}_scalar_t* scalars,
  size_t batch_size,
  size_t msm_size,
  size_t device_id);

int commit_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_projective_t* d_out,
  {{.CurveNameUpperCase}}_scalar_t* d_scalars,
  {{.CurveNameUpperCase}}_affine_t* d_points,
  size_t count,
  unsigned large_bucket_factor,
  size_t device_id);

int commit_batch_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_projective_t* d_out,
  {{.CurveNameUpperCase}}_scalar_t* d_scalars,
  {{.CurveNameUpperCase}}_affine_t* d_points,
  size_t count,
  size_t batch_size,
  size_t device_id);

int msm_g2_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_g2_projective_t* out,
  {{.CurveNameUpperCase}}_g2_affine_t* points,
  {{.CurveNameUpperCase}}_scalar_t* scalars,
  size_t count,
  size_t device_id);

int msm_batch_g2_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_g2_projective_t* out,
  {{.CurveNameUpperCase}}_g2_affine_t* points,
  {{.CurveNameUpperCase}}_scalar_t* scalars,
  size_t batch_size,
  size_t msm_size,
  size_t device_id);

int commit_g2_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_g2_projective_t* d_out,
  {{.CurveNameUpperCase}}_scalar_t* d_scalars,
  {{.CurveNameUpperCase}}_g2_affine_t* d_points,
  size_t count,
  unsigned large_bucket_factor,
  size_t device_id);

int commit_batch_g2_cuda_{{.CurveNameLowerCase}}(
  {{.CurveNameUpperCase}}_g2_projective_t* d_out,
  {{.CurveNameUpperCase}}_scalar_t* d_scalars,
  {{.CurveNameUpperCase}}_g2_affine_t* d_points,
  size_t count,
  size_t batch_size,
  size_t device_id,
  cudaStream_t stream);

#ifdef __cplusplus
}
#endif

#endif /* _{{.CurveNameUpperCase}}_MSM_H */
