#pragma once

#include "icicle/math/storage.h"
#include "icicle/fields/field.h"
#include "icicle/fields/params_gen.h"

namespace bls12_377 {
  struct fp_config {
    static constexpr storage<8> modulus = {0x00000001, 0x0a118000, 0xd0000001, 0x59aa76fe,
                                           0x5c37b001, 0x60b44d1e, 0x9a2ca556, 0x12ab655e};
    static constexpr unsigned reduced_digits_count = 3;
    static constexpr storage_array<reduced_digits_count, 8> reduced_digits = {
      {{0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000},
       {0xfffffff3, 0x7d1c7fff, 0x6ffffff2, 0x7257f50f, 0x512c0fee, 0x16d81575, 0x2bbb9a9d, 0x0d4bda32},
       {0xb861857b, 0x25d577ba, 0x8860591f, 0xcc2c27b5, 0xe5dc8593, 0xa7cc008f, 0xeff1c939, 0x011fdae7}}};
    PARAMS(modulus)
    MOD_SQR_SUBS()
    static constexpr storage_array<mod_subs_count, 2 * limbs_count + 2> mod_subs = {
      {{0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
        0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000},
       {0x8a8f3cf5, 0xb74fa610, 0xa0cf3f4d, 0xcae6ff0a, 0xb09a1a14, 0x2ce95cfb, 0x7e1a5df8, 0xff430e54, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x01ffffff, 0x00000000, 0x00000000},
       {0x151e79ea, 0x6e9f4c21, 0x419e7e9b, 0x95cdfe15, 0x61343429, 0x59d2b9f7, 0xfc34bbf0, 0xfe861ca8, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x03ffffff, 0x00000000, 0x00000000},
       {0x9fadb6df, 0x25eef231, 0xe26dbde9, 0x60b4fd1f, 0x11ce4e3e, 0x86bc16f3, 0x7a4f19e8, 0xfdc92afd, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x05ffffff, 0x00000000, 0x00000000},
       {0x2a3cf3d4, 0xdd3e9842, 0x833cfd36, 0x2b9bfc2a, 0xc2686853, 0xb3a573ee, 0xf86977e0, 0xfd0c3951, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x07ffffff, 0x00000000, 0x00000000},
       {0xb4cc30c9, 0x948e3e52, 0x240c3c84, 0xf682fb35, 0x73028267, 0xe08ed0ea, 0x7683d5d8, 0xfc4f47a6, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x09ffffff, 0x00000000, 0x00000000},
       {0x3f5b6dbe, 0x4bdde463, 0xc4db7bd2, 0xc169fa3f, 0x239c9c7c, 0x0d782de6, 0xf49e33d1, 0xfb9255fa, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0bffffff, 0x00000000, 0x00000000},
       {0xc9eaaab3, 0x032d8a73, 0x65aabb20, 0x8c50f94a, 0xd436b691, 0x3a618ae1, 0x72b891c9, 0xfad5644f, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0dffffff, 0x00000000, 0x00000000},
       {0x5479e7a8, 0xba7d3084, 0x0679fa6d, 0x5737f855, 0x84d0d0a6, 0x674ae7dd, 0xf0d2efc1, 0xfa1872a3, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x0fffffff, 0x00000000, 0x00000000},
       {0xdf09249d, 0x71ccd694, 0xa74939bb, 0x221ef75f, 0x356aeabb, 0x943444d9, 0x6eed4db9, 0xf95b80f8, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x11ffffff, 0x00000000, 0x00000000},
       {0x69986192, 0x291c7ca5, 0x48187909, 0xed05f66a, 0xe60504cf, 0xc11da1d4, 0xed07abb1, 0xf89e8f4c, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x13ffffff, 0x00000000, 0x00000000},
       {0xf4279e87, 0xe06c22b5, 0xe8e7b856, 0xb7ecf574, 0x969f1ee4, 0xee06fed0, 0x6b2209a9, 0xf7e19da1, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x15ffffff, 0x00000000, 0x00000000},
       {0x7eb6db7c, 0x97bbc8c6, 0x89b6f7a4, 0x82d3f47f, 0x473938f9, 0x1af05bcc, 0xe93c67a2, 0xf724abf5, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x17ffffff, 0x00000000, 0x00000000},
       {0x09461871, 0x4f0b6ed7, 0x2a8636f2, 0x4dbaf38a, 0xf7d3530e, 0x47d9b8c7, 0x6756c59a, 0xf667ba4a, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x19ffffff, 0x00000000, 0x00000000},
       {0x93d55566, 0x065b14e7, 0xcb557640, 0x18a1f294, 0xa86d6d23, 0x74c315c3, 0xe5712392, 0xf5aac89e, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x1bffffff, 0x00000000, 0x00000000},
       {0x1e64925b, 0xbdaabaf8, 0x6c24b58d, 0xe388f19f, 0x59078737, 0xa1ac72bf, 0x638b818a, 0xf4edd6f3, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x1dffffff, 0x00000000, 0x00000000},
       {0xa8f3cf50, 0x74fa6108, 0x0cf3f4db, 0xae6ff0aa, 0x09a1a14c, 0xce95cfbb, 0xe1a5df82, 0xf430e547, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x1fffffff, 0x00000000, 0x00000000},
       {0x33830c45, 0x2c4a0719, 0xadc33429, 0x7956efb4, 0xba3bbb61, 0xfb7f2cb6, 0x5fc03d7a, 0xf373f39c, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x21ffffff, 0x00000000, 0x00000000},
       {0xbe12493a, 0xe399ad29, 0x4e927376, 0x443deebf, 0x6ad5d576, 0x286889b2, 0xddda9b73, 0xf2b701f0, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x23ffffff, 0x00000000, 0x00000000},
       {0x48a1862f, 0x9ae9533a, 0xef61b2c4, 0x0f24edc9, 0x1b6fef8b, 0x5551e6ae, 0x5bf4f96b, 0xf1fa1045, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x25ffffff, 0x00000000, 0x00000000},
       {0xd330c324, 0x5238f94a, 0x9030f212, 0xda0becd4, 0xcc0a099f, 0x823b43a9, 0xda0f5763, 0xf13d1e99, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x27ffffff, 0x00000000, 0x00000000},
       {0x5dc00019, 0x09889f5b, 0x31003160, 0xa4f2ebdf, 0x7ca423b4, 0xaf24a0a5, 0x5829b55b, 0xf0802cee, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x29ffffff, 0x00000000, 0x00000000},
       {0xe84f3d0e, 0xc0d8456b, 0xd1cf70ad, 0x6fd9eae9, 0x2d3e3dc9, 0xdc0dfda1, 0xd6441353, 0xefc33b42, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x2bffffff, 0x00000000, 0x00000000},
       {0x72de7a03, 0x7827eb7c, 0x729eaffb, 0x3ac0e9f4, 0xddd857de, 0x08f75a9c, 0x545e714c, 0xef064997, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x2dffffff, 0x00000000, 0x00000000},
       {0xfd6db6f8, 0x2f77918c, 0x136def49, 0x05a7e8ff, 0x8e7271f3, 0x35e0b798, 0xd278cf44, 0xee4957eb, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x2fffffff, 0x00000000, 0x00000000},
       {0x87fcf3ed, 0xe6c7379d, 0xb43d2e96, 0xd08ee809, 0x3f0c8c07, 0x62ca1494, 0x50932d3c, 0xed8c6640, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x31ffffff, 0x00000000, 0x00000000},
       {0x128c30e3, 0xa8285dae, 0x250c6de5, 0xf5205e13, 0x4bde561d, 0xf067beae, 0x68da308a, 0xff7ad9f3, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x33ffffff, 0x00000000, 0x00000000},
       {0x9d1b6dd8, 0x5f7803be, 0xc5dbad33, 0xc0075d1d, 0xfc787032, 0x1d511ba9, 0xe6f48e83, 0xfebde847, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x35ffffff, 0x00000000, 0x00000000},
       {0x27aaaacd, 0x16c7a9cf, 0x66aaec81, 0x8aee5c28, 0xad128a47, 0x4a3a78a5, 0x650eec7b, 0xfe00f69c, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x37ffffff, 0x00000000, 0x00000000},
       {0xb239e7c2, 0xce174fdf, 0x077a2bce, 0x55d55b33, 0x5daca45c, 0x7723d5a1, 0xe3294a73, 0xfd4404f0, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x39ffffff, 0x00000000, 0x00000000},
       {0x3cc924b7, 0x8566f5f0, 0xa8496b1c, 0x20bc5a3d, 0x0e46be71, 0xa40d329d, 0x6143a86b, 0xfc871345, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x3bffffff, 0x00000000, 0x00000000},
       {0xc75861ac, 0x3cb69c00, 0x4918aa6a, 0xeba35948, 0xbee0d885, 0xd0f68f98, 0xdf5e0663, 0xfbca2199, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x3dffffff, 0x00000000, 0x00000000},
       {0x51e79ea1, 0xf4064211, 0xe9e7e9b7, 0xb68a5852, 0x6f7af29a, 0xfddfec94, 0x5d78645b, 0xfb0d2fee, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x3fffffff, 0x00000000, 0x00000000},
       {0xdc76db96, 0xab55e821, 0x8ab72905, 0x8171575d, 0x20150caf, 0x2ac94990, 0xdb92c254, 0xfa503e42, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x41ffffff, 0x00000000, 0x00000000},
       {0x6706188b, 0x62a58e32, 0x2b866853, 0x4c585668, 0xd0af26c4, 0x57b2a68b, 0x59ad204c, 0xf9934c97, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x43ffffff, 0x00000000, 0x00000000},
       {0xf1955580, 0x19f53442, 0xcc55a7a1, 0x173f5572, 0x814940d9, 0x849c0387, 0xd7c77e44, 0xf8d65aeb, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x45ffffff, 0x00000000, 0x00000000},
       {0x7c249275, 0xd144da53, 0x6d24e6ee, 0xe226547d, 0x31e35aed, 0xb1856083, 0x55e1dc3c, 0xf8196940, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x47ffffff, 0x00000000, 0x00000000},
       {0x06b3cf6a, 0x88948064, 0x0df4263c, 0xad0d5388, 0xe27d7502, 0xde6ebd7e, 0xd3fc3a34, 0xf75c7794, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x49ffffff, 0x00000000, 0x00000000},
       {0x91430c5f, 0x3fe42674, 0xaec3658a, 0x77f45292, 0x93178f17, 0x0b581a7a, 0x5216982d, 0xf69f85e9, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x4bffffff, 0x00000000, 0x00000000},
       {0x1bd24954, 0xf733cc85, 0x4f92a4d7, 0x42db519d, 0x43b1a92c, 0x38417776, 0xd030f625, 0xf5e2943d, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x4dffffff, 0x00000000, 0x00000000},
       {0xa6618649, 0xae837295, 0xf061e425, 0x0dc250a7, 0xf44bc341, 0x652ad471, 0x4e4b541d, 0xf525a292, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x4fffffff, 0x00000000, 0x00000000},
       {0x30f0c33e, 0x65d318a6, 0x91312373, 0xd8a94fb2, 0xa4e5dd55, 0x9214316d, 0xcc65b215, 0xf468b0e6, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x51ffffff, 0x00000000, 0x00000000},
       {0xbb800033, 0x1d22beb6, 0x320062c1, 0xa3904ebd, 0x557ff76a, 0xbefd8e69, 0x4a80100d, 0xf3abbf3b, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x53ffffff, 0x00000000, 0x00000000},
       {0x460f3d28, 0xd47264c7, 0xd2cfa20e, 0x6e774dc7, 0x061a117f, 0xebe6eb65, 0xc89a6e05, 0xf2eecd8f, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x55ffffff, 0x00000000, 0x00000000},
       {0xd09e7a1d, 0x8bc20ad7, 0x739ee15c, 0x395e4cd2, 0xb6b42b94, 0x18d04860, 0x46b4cbfe, 0xf231dbe4, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x57ffffff, 0x00000000, 0x00000000},
       {0x5b2db712, 0x4311b0e8, 0x146e20aa, 0x04454bdd, 0x674e45a9, 0x45b9a55c, 0xc4cf29f6, 0xf174ea38, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x59ffffff, 0x00000000, 0x00000000},
       {0xe5bcf407, 0xfa6156f8, 0xb53d5ff7, 0xcf2c4ae7, 0x17e85fbd, 0x72a30258, 0x42e987ee, 0xf0b7f88d, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x5bffffff, 0x00000000, 0x00000000},
       {0x704c30fc, 0xb1b0fd09, 0x560c9f45, 0x9a1349f2, 0xc88279d2, 0x9f8c5f53, 0xc103e5e6, 0xeffb06e1, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x5dffffff, 0x00000000, 0x00000000}}};

    static constexpr storage<8> rou = {0xec2a895e, 0x476ef4a4, 0x63e3f04a, 0x9b506ee3,
                                       0xd1a8a12f, 0x60c69477, 0x0cb92cc1, 0x11d4b7f6};
    TWIDDLES(modulus, rou)
  };

  /**
   * Scalar field. Is always a prime field.
   */
  typedef Field<fp_config> scalar_t;
} // namespace bls12_377
