#pragma once
#ifndef BLS12_381_SCALAR_PARAMS_H
  #define BLS12_381_SCALAR_PARAMS_H

  #include "icicle/math/storage.h"
  #include "icicle/fields/field.h"
  #include "icicle/fields/params_gen.h"

namespace bls12_381 {
  struct fp_config {
    static constexpr storage<8> modulus = {0x00000001, 0xffffffff, 0xfffe5bfe, 0x53bda402,
                                           0x09a1d805, 0x3339d808, 0x299d7d48, 0x73eda753};
    static constexpr unsigned reduced_digits_count = 3;
    static constexpr storage_array<reduced_digits_count, 8> reduced_digits = {
      {{0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000},
       {0xfffffffe, 0x00000001, 0x00034802, 0x5884b7fa, 0xecbc4ff5, 0x998c4fef, 0xacc5056f, 0x1824b159},
       {0xf3f29c6d, 0xc999e990, 0x87925c23, 0x2b6cedcb, 0x7254398f, 0x05d31496, 0x9f59ff11, 0x0748d9d9}}};
    PARAMS(modulus)
    MOD_SQR_SUBS()
    static constexpr storage_array<mod_subs_count, 2 * limbs_count + 2> mod_subs = {
      {{0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
        0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000},
       {0x4181ac72, 0xe6ccc2ce, 0x6f0e51fb, 0x1b2b44c5, 0x2e18c7cc, 0xcc0fec6a, 0x9c79b122, 0xd39dc605, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x1fffffff, 0x00000000, 0x00000000},
       {0x830358e4, 0xcd99859c, 0xde1ca3f7, 0x3656898a, 0x5c318f98, 0x981fd8d4, 0x38f36245, 0xa73b8c0b, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x3fffffff, 0x00000000, 0x00000000},
       {0xc4850557, 0xb4664869, 0x4d2951f2, 0xa53f7253, 0x93ec2f69, 0x97699d46, 0xff0a90b0, 0xeec6f963, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x5fffffff, 0x00000000, 0x00000000},
       {0x0606b1c9, 0x9b330b38, 0xbc37a3ee, 0xc06ab718, 0xc204f735, 0x637989b0, 0x9b8441d3, 0xc264bf69, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x7fffffff, 0x00000000, 0x00000000},
       {0x47885e3b, 0x81ffce06, 0x2b45f5ea, 0xdb95fbde, 0xf01dbf01, 0x2f89761a, 0x37fdf2f6, 0x9602856f, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x9fffffff, 0x00000000, 0x00000000},
       {0x890a0aae, 0x68cc90d3, 0x9a52a3e5, 0x4a7ee4a6, 0x27d85ed3, 0x2ed33a8d, 0xfe152161, 0xdd8df2c7, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xbfffffff, 0x00000000, 0x00000000},
       {0xca8bb720, 0x4f9953a1, 0x0960f5e1, 0x65aa296c, 0x55f1269f, 0xfae326f7, 0x9a8ed283, 0xb12bb8cd, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xdfffffff, 0x00000000, 0x00000000},
       {0x0c0d6393, 0x3666166f, 0x786da3dc, 0xd4931234, 0x8dabc670, 0xfa2ceb69, 0x60a600ee, 0xf8b72626, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000},
       {0x4d8f1005, 0x1d32d93d, 0xe77bf5d8, 0xefbe56f9, 0xbbc48e3c, 0xc63cd7d3, 0xfd1fb211, 0xcc54ec2b, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x1fffffff, 0x00000001, 0x00000000},
       {0x8f10bc77, 0x03ff9c0b, 0x568a47d4, 0x0ae99bbf, 0xe9dd5609, 0x924cc43d, 0x99996334, 0x9ff2b231, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x3fffffff, 0x00000001, 0x00000000},
       {0xd09268ea, 0xeacc5ed8, 0xc596f5ce, 0x79d28487, 0x2197f5da, 0x919688b0, 0x5fb0919f, 0xe77e1f8a, 0xffffffff,
        0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x5fffffff, 0x00000001, 0x00000000}}};

    static constexpr storage<8> rou = {0x0b912f1f, 0x1b788f50, 0x70b3e094, 0xc4024ff2,
                                       0xd168d6c0, 0x0fd56dc8, 0x5b416b6f, 0x0212d79e};
    TWIDDLES(modulus, rou)
  };

  /**
   * Scalar field. Is always a prime field.
   */
  typedef Field<fp_config> scalar_t;
} // namespace bls12_381

#endif
