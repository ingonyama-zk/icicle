# ICICLE PQC Package Config File
@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Try to find optional dependencies
find_dependency(CUDAToolkit QUIET)

# Load targets
include("${CMAKE_CURRENT_LIST_DIR}/icicle_pqc_package_targets.cmake")

# Define exported targets
set(ICICLE_PQC_PACKAGE_TARGETS icicle::icicle_pqc_package)

# Define useful variables for consumers
set(ICICLE_PQC_PACKAGE_INCLUDE_DIRS "${PACKAGE_PREFIX_DIR}/include")
set(ICICLE_PQC_PACKAGE_LIBRARY_DIRS "${PACKAGE_PREFIX_DIR}/lib")
set(ICICLE_PQC_PACKAGE_VERSION "@PACKAGE_VERSION@")
set(ICICLE_PQC_PACKAGE_DESCRIPTION "ICICLE Post-Quantum Cryptography package with CUDA backend")
set(ICICLE_PQC_PACKAGE_CUDA_FOUND ${CUDAToolkit_FOUND})

# Optional helper function for consumers
function(icicle_pqc_package_link_libraries target)
    target_link_libraries(${target} PRIVATE icicle::icicle_pqc_package)
    target_include_directories(${target} PRIVATE ${ICICLE_PQC_PACKAGE_INCLUDE_DIRS})
    
    # Link CUDA runtime if CUDA is found and backend is enabled
    if(ICICLE_PQC_PACKAGE_CUDA_FOUND)
        target_link_libraries(${target} PRIVATE CUDA::cudart)
    endif()
endfunction()

# Status summary
message(STATUS "Found ICICLE PQC Package: ${ICICLE_PQC_PACKAGE_VERSION}")
message(STATUS "  - Include dirs : ${ICICLE_PQC_PACKAGE_INCLUDE_DIRS}")
message(STATUS "  - Library dirs : ${ICICLE_PQC_PACKAGE_LIBRARY_DIRS}")
message(STATUS "  - CUDA support : ${ICICLE_PQC_PACKAGE_CUDA_FOUND}")
message(STATUS "  - Targets      : ${ICICLE_PQC_PACKAGE_TARGETS}")

# List installed libraries in the lib directory
file(GLOB ICICLE_PQC_PACKAGE_LIBRARIES
    "${PACKAGE_PREFIX_DIR}/lib/*.a"
    "${PACKAGE_PREFIX_DIR}/lib/*.so"
)

message(STATUS "GLOB matched ${ICICLE_PQC_PACKAGE_LIBRARIES}")

if(ICICLE_PQC_PACKAGE_LIBRARIES)
    message(STATUS "  - Installed libs:")
    foreach(_lib IN LISTS ICICLE_PQC_PACKAGE_LIBRARIES)
        message(STATUS "    - ${_lib}")
    endforeach()
else()
    message(STATUS "No matching libraries found.")
endif()
