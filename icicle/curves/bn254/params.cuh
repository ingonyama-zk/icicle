#pragma once
#include "../../utils/storage.cuh"

namespace PARAMS_BN254 {
  struct fp_config {
    static constexpr unsigned limbs_count = 8;
    static constexpr unsigned omegas_count = 28;
    static constexpr unsigned modulus_bit_count = 254;
    
    static constexpr storage<limbs_count> modulus = {0xf0000001, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72};
    static constexpr storage<limbs_count> modulus_2 = {0xe0000002, 0x87c3eb27, 0xf372e122, 0x5067d090, 0x0302b0ba, 0x70a08b6d, 0xc2634053, 0x60c89ce5};
    static constexpr storage<limbs_count> modulus_4 = {0xc0000004, 0x0f87d64f, 0xe6e5c245, 0xa0cfa121, 0x06056174, 0xe14116da, 0x84c680a6, 0xc19139cb};
    static constexpr storage<2*limbs_count> modulus_wide = {0xf0000001, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<2*limbs_count> modulus_squared = {0xe0000001, 0x08c3eb27, 0xdcb34000, 0xc7f26223, 0x68c9bb7f, 0xffe9a62c, 0xe821ddb0, 0xa6ce1975, 0x47b62fe7, 0x2c77527b, 0xd379d3df, 0x85f73bb0, 0x0348d21c, 0x599a6f7c, 0x763cbf9c, 0x0925c4b8};
    static constexpr storage<2*limbs_count> modulus_squared_2 = {0xc0000002, 0x1187d64f, 0xb9668000, 0x8fe4c447, 0xd19376ff, 0xffd34c58, 0xd043bb61, 0x4d9c32eb, 0x8f6c5fcf, 0x58eea4f6, 0xa6f3a7be, 0x0bee7761, 0x0691a439, 0xb334def8, 0xec797f38, 0x124b8970};
    static constexpr storage<2*limbs_count> modulus_squared_4 = {0x80000004, 0x230fac9f, 0x72cd0000, 0x1fc9888f, 0xa326edff, 0xffa698b1, 0xa08776c3, 0x9b3865d7, 0x1ed8bf9e, 0xb1dd49ed, 0x4de74f7c, 0x17dceec3, 0x0d234872, 0x6669bdf0, 0xd8f2fe71, 0x249712e1};

    static constexpr storage<limbs_count> m = {0xbe1de925, 0x620703a6, 0x09e880ae, 0x71448520, 0x68073014, 0xab074a58, 0x623a04a7, 0x54a47462};
    static constexpr storage<limbs_count> one = {0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> zero = {0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};

    static constexpr storage_array<omegas_count, limbs_count> omega = { {
              {0xf0000000, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72},
              {0x608fc9cb, 0x20cff123, 0x7c4604a5, 0xcb49c351, 0x41a91758, 0xb3c4d79d, 0x00000000, 0x00000000},
              {0x07b95a9b, 0x8b11d9ab, 0x41671f56, 0x20710ead, 0x30f81dee, 0xfb3acaee, 0x9778465c, 0x130b1711},
              {0x373428de, 0xb85a71e6, 0xaeb0337e, 0x74954d30, 0x303402b7, 0x2bfc85eb, 0x409556c0, 0x02e40daf},
              {0xf210979d, 0x8c99980c, 0x34905b4d, 0xef8f3113, 0xdf25d8e7, 0x0aeaf3e7, 0x03bfbd79, 0x27247136},
              {0x763d698f, 0x78ce6a0b, 0x1d3213ee, 0xd80396ec, 0x67a8a676, 0x035cdc75, 0xb2a13d3a, 0x26177cf2},
              {0x29bbd82a, 0x66025d34, 0xd51adad3, 0x7de451fd, 0x2391cd58, 0x75d44157, 0x67c7e8f7, 0x1a228e1f},
              {0xe58d2045, 0x9e8224f9, 0x9db56d8b, 0x8763970f, 0x6924235d, 0x002c22ca, 0x9a5b1fe5, 0x23f7a8c4},
              {0x57e32226, 0xecb0115c, 0x7986b170, 0x9de32043, 0x9ba3478e, 0xbda33f36, 0x42663c00, 0x2a98c60f},
              {0x893de19c, 0x1e7cf96f, 0x41b8ab52, 0xeee3e28d, 0xd0b69f2c, 0x7d9ef422, 0x3fb50a52, 0x213a41b9},
              {0x0984c448, 0xf08c8b53, 0xc402c42c, 0xb129e235, 0x9cd953ee, 0x06981b97, 0x54c83f3a, 0x14c28c45},
              {0x7f2bce0e, 0x637162dd, 0x60632cfd, 0x3986de3a, 0x322a13d5, 0x1d597f9b, 0x443a15cd, 0x2288f608},
              {0x4feaa40d, 0x6e4249aa, 0x55bea19d, 0xe320bcd2, 0x8a080b27, 0x46ecf54e, 0x669b23a8, 0x0be6f2f3},
              {0x5faf820e, 0x2e0df3c8, 0xf57ba925, 0x94012fad, 0xec7e04b6, 0xd4a4c3f8, 0xdada7616, 0x09b10f9e},
              {0x5ccf87c6, 0xfe7b2472, 0xbca1f36d, 0x28a9c54c, 0xa2fcbf44, 0x69b51fda, 0xaf3bccd6, 0x1e85c3d0},
              {0xe06e6104, 0x6f7b3d2c, 0x0ca7fa8b, 0xa2dae3f7, 0x7f55cccb, 0xa8ed59c6, 0x9393d41a, 0x0136f0c1},
              {0xe8be0cf9, 0x46e4b3fc, 0x26a4ec96, 0x95cac63c, 0x72c6fabd, 0xb5383490, 0x7a77e6f4, 0x0bf03fb7},
              {0xbe7fae83, 0xf1533e2d, 0x2bf2f819, 0x07fa9bc3, 0x0ae79bd3, 0x639e807e, 0xd918b4d6, 0x048a18f9},
              {0xfd994358, 0x81f47ff5, 0xa4046266, 0x82d21187, 0x4f8b37af, 0xb853f627, 0x83c8d939, 0x1d28a336},
              {0x54fd384a, 0xa10aa9d9, 0x115fb459, 0x55c89a80, 0xf2fefc7c, 0x8124e414, 0x4dcb6e29, 0x240671d5},
              {0x0198b787, 0xdec6153e, 0xe4ced161, 0xca96510d, 0x7a5aa862, 0x5be2fd37, 0xf296b11c, 0x2da73caa},
              {0x05c55d1c, 0x4dce2389, 0xfa7c4637, 0xf9a0b409, 0x536fb2aa, 0x93cb1b47, 0xf192403b, 0x119bd737},
              {0xa6e170a7, 0x052227f3, 0x497e76fa, 0x7b6d8e56, 0x2167875a, 0xaba6b5f1, 0xdf18f989, 0x0aeda119},
              {0x5bebb03f, 0x22c5804b, 0x67f59436, 0xbe1e0138, 0x3485fed1, 0x67cf2e16, 0xc78bb32e, 0x2149424c},
              {0x122289c9, 0x8c4c6154, 0xe4a315a6, 0x6b6af77a, 0x9b660726, 0xb5f15d86, 0x3d681050, 0x035c63f6},
              {0x26251593, 0x1e5382ec, 0x4d18be62, 0x06b499fe, 0xc269da43, 0x42d636d0, 0x9bc0794a, 0x19bb352a},
              {0x8c321a28, 0xcd6f38f4, 0x2c9f1792, 0x95cceb99, 0x0d152ffa, 0x0630d09e, 0x8b277331, 0x151d457a},
              {0x88590882, 0xb8dde849, 0x0e1a5d5d, 0x67cf5acd, 0x723d5c5f, 0xe1ed0cc8, 0xc8953178, 0x188c51b4}
    } };


    static constexpr storage_array<omegas_count, limbs_count> omega_inv = { {
              {0xf0000000, 0x43e1f593, 0x79b97091, 0x2833e848, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72},
              {0x8f703636, 0x23120470, 0xfd736bec, 0x5cea24f6, 0x3fd84104, 0x048b6e19, 0xe131a029, 0x30644e72},
              {0xc1bd5e80, 0x948dad4a, 0xf8170a0a, 0x52627366, 0x96afef36, 0xec9b9e2f, 0xc8c14f22, 0x2b337de1},
              {0xe306460b, 0xb11509c6, 0x174efb98, 0x996dfbe1, 0x94dd508c, 0x1c6e4f45, 0x16cbbf4e, 0x21082ca2},
              {0x3bb512d0, 0x3eed4c53, 0x838eeb1d, 0x9c18d51b, 0x47c0b2a9, 0x9678200d, 0x306b93d2, 0x09c532c6},
              {0x118f023a, 0xdb94fb05, 0x26e324be, 0x46a6cb24, 0x49bdadf2, 0xc24cdb76, 0x5b080fca, 0x1418144d},
              {0x3562e7f0, 0xa6d3ae87, 0xc2c72417, 0x0a6892e3, 0x9928147d, 0xd8f36419, 0x34009697, 0x197d1075},
              {0x33dfc1c9, 0x2a6289b1, 0x5501716e, 0xbce46410, 0x46fc5cda, 0xf889ee59, 0x17eaabaf, 0x02322181},
              {0xcc1f5f41, 0x228296e4, 0xb64ec189, 0x33dfcfa6, 0x761eb33b, 0x540e6644, 0x92785b8f, 0x280fea34},
              {0x7da16033, 0x5c3b9077, 0x521453d1, 0x872b404c, 0x9b054370, 0xfa5f6841, 0xada992f1, 0x0d0daaff},
              {0x717d26a6, 0xecb21619, 0xd2347943, 0xa7292758, 0xdb78b96e, 0xeb5c7bb1, 0xbe49270d, 0x26b0514e},
              {0xeff004d4, 0x61f1b8d2, 0x5394943e, 0xcaec7c92, 0x3adcbc53, 0xb3054a41, 0xd4d8eb05, 0x2fd82a77},
              {0x8518ecca, 0x1cccc58c, 0x1b0344ef, 0xd468e695, 0x4501b89c, 0x60888009, 0xa35f81da, 0x0b65bab2},
              {0xef3775e2, 0xaac68b20, 0x1a8af1f5, 0xade7937c, 0x48e14944, 0x4e613e72, 0xf67b5e99, 0x07ee2fe0},
              {0x01f73bfa, 0x7a9178dd, 0x4ad38023, 0x4e6a9df1, 0xc1cf1a77, 0x186f8ba1, 0x0113aedc, 0x1c75f370},
              {0x6f0924c9, 0x825269f8, 0x321acd8d, 0x85dc2b62, 0x0cff4400, 0xc63cb6e9, 0x0d87b733, 0x0bf840f4},
              {0x9cd2abc9, 0xb9064db6, 0x35033aba, 0x21800b41, 0x284fabbf, 0x2e7cd8b7, 0x50fd23e3, 0x14fdf780},
              {0x3c5b53bd, 0x31a0e6e5, 0xad2ade0a, 0x000e1067, 0xf7740140, 0x7507f5ca, 0x4d4c1f98, 0x1faf0653},
              {0x04b80dc8, 0x21ab655a, 0x7c0bd3dc, 0xf30ae094, 0x94ded480, 0x90f19302, 0x0ee779cb, 0x13a0614f},
              {0xc5d0d45f, 0x325dbdfc, 0xdb23c86e, 0x531a0e2c, 0x79c537a7, 0xa2a71200, 0x2b0445a8, 0x2e103cac},
              {0x0eb3de4a, 0x995227ff, 0xb0f25c6e, 0x735dd808, 0x36941528, 0x990dabf7, 0xf1fe47c5, 0x19ffeb1c},
              {0x562cb6d5, 0xd61871ee, 0x8dc2c90d, 0xacd56e5a, 0x8d0d8980, 0xda46bba0, 0x92ec6935, 0x2d46308e},
              {0xa70a7c13, 0x1703a78e, 0xdd4ce698, 0xc6bc1d64, 0x5693e78e, 0xbd63b0af, 0x568a26b0, 0x1d527113},
              {0x02648ff7, 0x30b77d88, 0x5d7e4386, 0xf1a86cdd, 0x66dd8016, 0x69f57e82, 0x3aa86583, 0x11aeccf6},
              {0x0e4cebf9, 0x8c389a89, 0x1086a5f0, 0x04596644, 0x79d41b0e, 0xeb3dabcc, 0x4e649ca0, 0x2977e823},
              {0xe1ce2126, 0x3fb533e8, 0xba920fa8, 0xc4f9f250, 0xd91fa66c, 0x3b40e70b, 0x44d8f309, 0x295e48a4},
              {0xdfc40a8b, 0x52bb0a4c, 0x46112483, 0x4fb64a4b, 0x460eac6d, 0x70ffb433, 0xe671b22c, 0x193903e1},
              {0xe25ab83b, 0x44c8eb25, 0x9d2ac154, 0xc66b9e1b, 0xb17a4c68, 0xc023ff24, 0xb5e12a84, 0x18f27f93}
    } };
    

    static constexpr storage_array<omegas_count, limbs_count> inv = { {
              {0xf8000001, 0xa1f0fac9, 0x3cdcb848, 0x9419f424, 0x40c0ac2e, 0xdc2822db, 0x7098d014, 0x18322739},
              {0xf4000001, 0xf2e9782e, 0x5b4b146c, 0xde26ee36, 0xe1210245, 0x4a3c3448, 0x28e5381f, 0x244b3ad6},
              {0x72000001, 0x1b65b6e1, 0x6a82427f, 0x832d6b3f, 0xb1512d51, 0x81463cff, 0x850b6c24, 0x2a57c4a4},
              {0xb1000001, 0x2fa3d63a, 0xf21dd988, 0x55b0a9c3, 0x196942d7, 0x1ccb415b, 0xb31e8627, 0x2d5e098b},
              {0x50800001, 0xb9c2e5e7, 0x35eba50c, 0x3ef24906, 0xcd754d9a, 0x6a8dc388, 0x4a281328, 0x2ee12bff},
              {0xa0400001, 0xfed26dbd, 0x57d28ace, 0xb39318a7, 0xa77b52fb, 0x116f049f, 0x15acd9a9, 0x2fa2bd39},
              {0xc8200001, 0x215a31a8, 0xe8c5fdb0, 0x6de38077, 0x147e55ac, 0x64dfa52b, 0xfb6f3ce9, 0x300385d5},
              {0x5c100001, 0xb29e139e, 0x313fb720, 0xcb0bb460, 0xcaffd704, 0x8e97f570, 0x6e506e89, 0x3033ea24},
              {0x26080001, 0xfb400499, 0x557c93d8, 0xf99fce54, 0xa64097b0, 0xa3741d93, 0xa7c10759, 0x304c1c4b},
              {0x8b040001, 0x1f90fd16, 0x679b0235, 0x10e9db4e, 0x13e0f807, 0xade231a5, 0x447953c1, 0x3058355f},
              {0x3d820001, 0x31b97955, 0x70aa3963, 0x1c8ee1cb, 0xcab12832, 0xb3193bad, 0x12d579f5, 0x305e41e9},
              {0x96c10001, 0x3acdb774, 0xf531d4fa, 0xa2616509, 0x26194047, 0xb5b4c0b2, 0xfa038d0f, 0x3061482d},
              {0x43608001, 0xbf57d684, 0x3775a2c5, 0x654aa6a9, 0x53cd4c52, 0xb7028334, 0x6d9a969c, 0x3062cb50},
              {0x19b04001, 0x819ce60c, 0xd89789ab, 0xc6bf4778, 0x6aa75257, 0x37a96475, 0xa7661b63, 0x30638ce1},
              {0x04d82001, 0x62bf6dd0, 0xa9287d1e, 0x777997e0, 0xf614555a, 0x77fcd515, 0x444bddc6, 0x3063edaa},
              {0xfa6c1001, 0xd350b1b1, 0x9170f6d7, 0xcfd6c014, 0x3bcad6db, 0x18268d66, 0x92bebef8, 0x30641e0e},
              {0xf5360801, 0x8b9953a2, 0x859533b4, 0x7c05542e, 0x5ea6179c, 0xe83b698e, 0xb9f82f90, 0x30643640},
              {0x729b0401, 0xe7bda49b, 0x7fa75222, 0xd21c9e3b, 0x7013b7fc, 0x5045d7a2, 0xcd94e7dd, 0x30644259},
              {0xb14d8201, 0x15cfcd17, 0xfcb0615a, 0xfd284341, 0x78ca882c, 0x844b0eac, 0x57634403, 0x30644866},
              {0xd0a6c101, 0xacd8e155, 0x3b34e8f5, 0x12ae15c5, 0x7d25f045, 0x9e4daa31, 0x9c4a7216, 0x30644b6c},
              {0xe0536081, 0x785d6b74, 0xda772cc3, 0x1d70ff06, 0xff53a451, 0x2b4ef7f3, 0xbebe0920, 0x30644cef},
              {0x6829b041, 0x5e1fb084, 0xaa184eaa, 0x22d273a7, 0x406a7e57, 0xf1cf9ed5, 0x4ff7d4a4, 0x30644db1},
              {0x2c14d821, 0xd100d30c, 0x11e8df9d, 0x25832df8, 0xe0f5eb5a, 0x550ff245, 0x1894ba67, 0x30644e12},
              {0x0e0a6c11, 0x8a716450, 0x45d12817, 0xa6db8b20, 0x313ba1db, 0x86b01bfe, 0x7ce32d48, 0x30644e42},
              {0xff053609, 0x6729acf1, 0x5fc54c54, 0x6787b9b4, 0x595e7d1c, 0x1f8030da, 0xaf0a66b9, 0x30644e5a},
              {0xf7829b05, 0xd585d142, 0x6cbf5e72, 0xc7ddd0fe, 0x6d6feabc, 0x6be83b48, 0xc81e0371, 0x30644e66},
              {0x73c14d83, 0x0cb3e36b, 0x733c6782, 0xf808dca3, 0x7778a18c, 0x921c407f, 0xd4a7d1cd, 0x30644e6c},
              {0xb1e0a6c2, 0xa84aec7f, 0xf67aec09, 0x101e6275, 0xfc7cfcf5, 0xa536431a, 0xdaecb8fb, 0x30644e6f}
    } }; 
  };

  struct fq_config {
    static constexpr unsigned limbs_count = 8;
    static constexpr unsigned modulus_bit_count = 254;
    static constexpr storage<limbs_count> modulus = {0xd87cfd47, 0x3c208c16, 0x6871ca8d, 0x97816a91, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72};
    static constexpr storage<limbs_count> modulus_2 = {0xb0f9fa8e, 0x7841182d, 0xd0e3951a, 0x2f02d522, 0x0302b0bb, 0x70a08b6d, 0xc2634053, 0x60c89ce5};
    static constexpr storage<limbs_count> modulus_4 = {0x61f3f51c, 0xf082305b, 0xa1c72a34, 0x5e05aa45, 0x06056176, 0xe14116da, 0x84c680a6, 0xc19139cb};
    static constexpr storage<2*limbs_count> modulus_wide = {0xd87cfd47, 0x3c208c16, 0x6871ca8d, 0x97816a91, 0x8181585d, 0xb85045b6, 0xe131a029, 0x30644e72, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<2*limbs_count> modulus_squared = {0x275d69b1, 0x3b5458a2, 0x09eac101, 0xa602072d, 0x6d96cadc, 0x4a50189c, 0x7a1242c8, 0x04689e95, 0x34c6b38d, 0x26edfa5c, 0x16375606, 0xb00b8551, 0x0348d21c, 0x599a6f7c, 0x763cbf9c, 0x0925c4b8};
    static constexpr storage<2*limbs_count> modulus_squared_2 = {0x4ebad362, 0x76a8b144, 0x13d58202, 0x4c040e5a, 0xdb2d95b9, 0x94a03138, 0xf4248590, 0x08d13d2a, 0x698d671a, 0x4ddbf4b8, 0x2c6eac0c, 0x60170aa2, 0x0691a439, 0xb334def8, 0xec797f38, 0x124b8970};
    static constexpr storage<2*limbs_count> modulus_squared_4 = {0x9d75a6c4, 0xed516288, 0x27ab0404, 0x98081cb4, 0xb65b2b72, 0x29406271, 0xe8490b21, 0x11a27a55, 0xd31ace34, 0x9bb7e970, 0x58dd5818, 0xc02e1544, 0x0d234872, 0x6669bdf0, 0xd8f2fe71, 0x249712e1};
    static constexpr storage<limbs_count> m = {0x19bf90e5, 0x6f3aed8a, 0x67cd4c08, 0xae965e17, 0x68073013, 0xab074a58, 0x623a04a7, 0x54a47462};
    static constexpr storage<limbs_count> one = {0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> zero = {0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    // i^2, the square of the imaginary unit for the extension field
    static constexpr uint32_t i_squared = 1;
    // true if i^2 is negative
    static constexpr bool i_squared_is_negative = true;
    // G1 and G2 generators 
    static constexpr storage<limbs_count> g1_gen_x = {0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> g1_gen_y = {0x00000002, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
    static constexpr storage<limbs_count> g2_gen_x_re = {0xd992f6ed, 0x46debd5c, 0xf75edadd, 0x674322d4, 0x5e5c4479, 0x426a0066, 0x121f1e76, 0x1800deef};
    static constexpr storage<limbs_count> g2_gen_x_im = {0xaef312c2, 0x97e485b7, 0x35a9e712, 0xf1aa4933, 0x31fb5d25, 0x7260bfb7, 0x920d483a, 0x198e9393};
    static constexpr storage<limbs_count> g2_gen_y_re = {0x66fa7daa, 0x4ce6cc01, 0x0c43d37b, 0xe3d1e769, 0x8dcb408f, 0x4aab7180, 0xdb8c6deb, 0x12c85ea5};
    static constexpr storage<limbs_count> g2_gen_y_im = {0xd122975b, 0x55acdadc, 0x70b38ef3, 0xbc4b3133, 0x690c3395, 0xec9e99ad, 0x585ff075, 0x090689d0};
  };

  static constexpr storage<fq_config::limbs_count> weierstrass_b = {0x00000003, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000};
  static constexpr storage<fq_config::limbs_count> weierstrass_b_g2_re = {0x24a138e5, 0x3267e6dc, 0x59dbefa3, 0xb5b4c5e5, 0x1be06ac3, 0x81be1899, 0xceb8aaae, 0x2b149d40};
  static constexpr storage<fq_config::limbs_count> weierstrass_b_g2_im = {0x85c315d2, 0xe4a2bd06, 0xe52d1852, 0xa74fa084, 0xeed8fdf4, 0xcd2cafad, 0x3af0fed4, 0x009713b0};
}
