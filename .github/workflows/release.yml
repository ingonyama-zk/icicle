name: Release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major
      bumpDocs:
        description: 'Bump Docs?'
        required: true
        type: boolean
        default: true
      bumpRust:
        description: 'Bump Rust crates?'
        required: true
        type: boolean
        default: true
      createRelease:
        description: 'Create draft release?'
        required: true
        type: boolean
        default: true

jobs:
  release:
    name: Release
    runs-on: [self-hosted, Linux, X64, icicle, release]  
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.DEPLOY_KEY }}
      - name: Checkout CUDA Backend
        uses: actions/checkout@v4
        with:
          repository: ingonyama-zk/icicle-cuda-backend
          path: ./icicle/backend/cuda
          token: ${{ secrets.GITHUB_TOKEN }}
          ssh-key: ${{ secrets.CUDA_PULL_KEY }}
          ref: main
      - name: Setup Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('~/.cargo/bin/cargo-workspaces') }}
      - name: Install cargo-workspaces
        if: steps.cache.outputs.cache-hit != 'true'
        run: cargo install cargo-workspaces
      - name: Bump rust crate versions, commit, and tag
        if: ${{ inputs.bumpRust }}
        working-directory: wrappers/rust
        # https://github.com/pksunkara/cargo-workspaces?tab=readme-ov-file#version
        run: |
          git config user.name release-bot
          git config user.email release-bot@ingonyama.com
          cargo workspaces version ${{ inputs.releaseType }} -y --no-individual-tags --no-git-push -m "Bump rust crates' version"
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Bump docs version
        id: bump-docs-version
        if: ${{ inputs.releaseType != 'patch' && inputs.bumpDocs }}
        working-directory: ./docs
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          LATEST_VERSION=${LATEST_TAG:1}
          npm install
          npm run docusaurus docs:version $LATEST_VERSION
          git add --all
          git commit -m "Bump docs version"
      - name: Push to github branch main
        run: |
          git push origin main --tags
      - name: Create draft release
        if: ${{ inputs.createRelease }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |          
          LATEST_TAG=$(git describe --tags --abbrev=0)
          gh release create $LATEST_TAG --generate-notes -d --verify-tag -t "Release $LATEST_TAG"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload release tars
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p release_output && rm -rf ./release_output/*
          LATEST_TAG=$(git describe --tags --abbrev=0)
          ./scripts/release/build_all.sh $LATEST_TAG ./release_output
          for file in ./release_output/*.tar.gz; do
            gh release upload $LATEST_TAG "$file"
          done
