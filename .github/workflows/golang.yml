name: GoLang

on:
  push:
    branches:
      - ci-test/language-specific-flows

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-changed-files:
    uses: ./.github/workflows/check-changed-files.yml

  check-format:
    name: Check Code Format
    runs-on: ubuntu-22.04
    needs: check-changed-files
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Check gofmt
      if: needs.check-changed-files.outputs.golang == 'true'
      run: if [[ $(go list ./... | xargs go fmt) ]]; then echo "Please run go fmt"; exit 1; fi

  build-linux:
    name: Build on Linux
    runs-on: [self-hosted, Linux, X64, icicle]
    needs: [check-changed-files, check-format]
    strategy:
      matrix:
        curve: [bn254, bls12_381, bls12_377, bw6_761]
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Build
      working-directory: ./wrappers/golang
      if: needs.check-changed-files.outputs.golang == 'true' || needs.check-changed-files.outputs.cpp_cuda == 'true'
      run: ./build.sh ${{ matrix.curve }} ON # builds a single curves with G2 enabled
    - name: Upload ICICLE lib artifacts
      uses: actions/upload-artifact@v4
      if: needs.check-changed-files.outputs.golang == 'true' || needs.check-changed-files.outputs.cpp_cuda == 'true'
      with:
        name: icicle-builds-${{ matrix.curve }}-${{ github.workflow }}-${{ github.sha }}
        path: icicle/build/libingo_${{ matrix.curve }}.a
  
  test-linux:
    name: Test on Linux
    runs-on: [self-hosted, Linux, X64, icicle]
    needs: [check-changed-files, build-linux]
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v4
    - name: Download ICICLE lib artifacts
      uses: actions/download-artifact@v4
      if: needs.check-changed-files.outputs.golang == 'true' || needs.check-changed-files.outputs.cpp_cuda == 'true'
      with:
        path: ./icicle/build/
        merge-multiple: true
    - name: Run Tests
      working-directory: ./wrappers/golang
      if: needs.check-changed-files.outputs.golang == 'true' || needs.check-changed-files.outputs.cpp_cuda == 'true'
      run: |
        export CPATH=$CPATH:/usr/local/cuda/include
        go test --tags=g2 ./... -count=1
