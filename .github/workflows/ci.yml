name: CI

on:
  pull_request:
    branches:
      - main
  issue_comment:
    types:
      - created
      - edited

concurrency:
  group:  ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  calculate-conditions:
    name: Calculate Conditions
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.conditions.outputs.should-run }}
      checkout-ref: ${{ steps.conditions.outputs.checkout-ref }}
      pr-number: ${{ steps.conditions.outputs.pr-number }}
      conditional-testing: ${{ steps.conditions.outputs.conditional-testing }}
    steps:
      - name: Calculate conditions and refs
        id: conditions
        run: |
          # Check if workflow should run
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "checkout-ref=${{ github.ref }}" >> $GITHUB_OUTPUT
            echo "pr-number=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
            echo "conditional-testing=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "issue_comment" ]] && [[ "${{ github.event.issue.pull_request }}" != "" ]]; then
            COMMENT_BODY=${{ github.event.comment.body }}
            COMMENT_BODY_LOWER=$(echo "$COMMENT_BODY" | tr '[:upper:]' '[:lower:]')
            if [[ "$COMMENT_BODY_LOWER" == *"run full ci"* ]]; then
              echo "should-run=true" >> $GITHUB_OUTPUT
              echo "checkout-ref=refs/pull/${{ github.event.issue.number }}/head" >> $GITHUB_OUTPUT
              echo "pr-number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
              echo "conditional-testing=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
            echo "checkout-ref=${{ github.ref }}" >> $GITHUB_OUTPUT
            echo "pr-number=" >> $GITHUB_OUTPUT
            echo "conditional-testing=true" >> $GITHUB_OUTPUT
          fi

  spelling-checker:
    name: Check Spelling
    runs-on: ubuntu-latest
    needs: calculate-conditions
    if: needs.calculate-conditions.outputs.should-run == 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
      - uses: codespell-project/actions-codespell@fad9339798e1ee3fe979ae0a022c931786a408b8
        with:
          # https://github.com/codespell-project/actions-codespell?tab=readme-ov-file#parameter-skip
          skip: ./**/target,./**/build,./docs/*.js,./docs/*.json,./*.svg
          # https://github.com/codespell-project/actions-codespell?tab=readme-ov-file#parameter-ignore_words_file
          ignore_words_file: .codespellignore

  check-changed-files:
    uses: ./.github/workflows/check-changed-files.yml
    needs: calculate-conditions
    if: needs.calculate-conditions.outputs.should-run == 'true'
    with:
      ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}

  check-format:
    name: Check Code Format
    runs-on: [self-hosted, Linux, X64, formatter]
    needs: [calculate-conditions, check-changed-files]
    if: needs.calculate-conditions.outputs.should-run == 'true'
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      with:
        ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
    - name: Setup go
      if: needs.check-changed-files.outputs.go == 'true'
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b
      with:
        go-version: '1.22.0'
        cache: false
    - name: Check clang-format
      if: needs.check-changed-files.outputs.cpp == 'true'
      run: |
        clang-format --version
        ./scripts/format_all.sh . --check --exclude "build|wrappers"
    - name: Check gofmt
      if: needs.check-changed-files.outputs.go == 'true'
      run: if [[ $(go list ./... | xargs go fmt) ]]; then echo "Please run go fmt"; exit 1; fi
    - name: Check rustfmt
      if: needs.check-changed-files.outputs.rust == 'true'
      working-directory: ./wrappers/rust
      run: |
        rustup override set nightly
        cargo fmt --all -- --check

  extract-cuda-backend-branch:
    uses: ./.github/workflows/extract-backend.yml
    needs: calculate-conditions
    if: needs.calculate-conditions.outputs.should-run == 'true'
    with:
      pr-number: ${{ fromJSON(needs.calculate-conditions.outputs.pr-number) }}
      backend-type: cuda

  # extract-metal-backend-branch:
  #   uses: ./.github/workflows/extract-backend.yml
  #   needs: calculate-conditions
  #   if: needs.calculate-conditions.outputs.should-run == 'true'
  #   with:
  #     pr-number: ${{ needs.calculate-conditions.outputs.pr-number }}
  #     backend-type: metal
  
  test-curve:
    name: Curves
    needs: [calculate-conditions, check-changed-files, check-format, extract-cuda-backend-branch]
    if: needs.calculate-conditions.outputs.should-run == 'true'
    uses: ./.github/workflows/test-curve.yml
    with:
      ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
      backend: ${{ matrix.backend }}
      backend_upper: ${{ matrix.backend_upper }}
      runner: ${{ matrix.runner }}
      backend_branch: ${{ matrix.backend_branch }}
      skip-rust-all-curves: ${{ matrix.skip-rust-all-curves }}
      skip-cpp-all-curves: ${{ matrix.skip-cpp-all-curves }}
      skip-golang-all-curves: ${{ matrix.skip-golang-all-curves }}
      initial-support: ${{ matrix.initial-support }}
      enable_conditional_testing: ${{ needs.calculate-conditions.outputs.conditional-testing == 'true' }}
      # Changed files flags
      changed_curve: ${{ needs.check-changed-files.outputs.curve }}
      changed_cpp: ${{ needs.check-changed-files.outputs.cpp }}
      changed_rust: ${{ needs.check-changed-files.outputs.rust }}
      changed_go: ${{ needs.check-changed-files.outputs.go }}
      changed_cpu_backend: ${{ needs.check-changed-files.outputs.cpu-backend }}
      changed_backend_api: ${{ needs.check-changed-files.outputs.backend-api }}
      # Feature change flags
      changed_msm: ${{ needs.check-changed-files.outputs.msm }}
      changed_ntt: ${{ needs.check-changed-files.outputs.ntt }}
      changed_ecntt: ${{ needs.check-changed-files.outputs.ecntt }}
      changed_pairing: ${{ needs.check-changed-files.outputs.pairing }}
      changed_fri: ${{ needs.check-changed-files.outputs.fri }}
      changed_sumcheck: ${{ needs.check-changed-files.outputs.sumcheck }}
      changed_poseidon: ${{ needs.check-changed-files.outputs.poseidon }}
      changed_poseidon2: ${{ needs.check-changed-files.outputs.poseidon2 }}
    secrets:
      backend_ssh_key: ${{ secrets[matrix.secret_key] }}
    strategy:
      matrix:
        backend: [cuda]
        # backend: [cuda, metal]
        include:
          - backend: cuda
            backend_upper: CUDA
            secret_key: CUDA_PULL_KEY
            runner: '["self-hosted", "Linux", "X64", "icicle"]'
            backend_branch: ${{ needs.extract-cuda-backend-branch.outputs.backend-branch }}
            skip-rust-all-curves: ""
            skip-cpp-all-curves: ""
            skip-golang-all-curves: "false"
            initial-support: false
          # - backend: metal
          #   backend_upper: METAL
          #   secret_key: METAL_PULL_KEY
          #   runner: '["self-hosted", "macOS", "ARM64", "icicle", "metal"]'
          #   backend_branch: ${{ needs.extract-metal-backend-branch.outputs.backend-branch }}
          #   skip-rust-all-curves: "--skip montgomery --skip ntt --skip poseidon --skip ecntt --skip sumcheck --skip program --skip msm_batch_not_shared --skip msm_skewed_distributions --skip vec_ops_scalars_inv --skip pairing --skip fri"
          #   skip-cpp-all-curves: ".*G2.*|.*ecntt.*|.*ProgramExecutorVecOp.*|.*Sumcheck.*|.*Fri.*|FieldTestBase.polynomialDivision|.*MerkleTree.*|.*poseidon.*|HashApiTest.KeccakLarge"
          #   skip-golang-all-curves: "true"
          #   initial-support: true
          #   supported_features: '["msm"]' # TODO: Since Metal doesn't support all features, we need to specify the supported features

  test-field:
    name: Fields
    needs: [calculate-conditions, check-changed-files, check-format, extract-cuda-backend-branch]
    if: needs.calculate-conditions.outputs.should-run == 'true'
    uses: ./.github/workflows/test-field.yml
    with:
      ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
      backend: ${{ matrix.backend }}
      backend_upper: ${{ matrix.backend_upper }}
      runner: ${{ matrix.runner }}
      backend_branch: ${{ matrix.backend_branch }}
      skip-rust-all-fields: ${{ matrix.skip-rust-all-fields }}
      skip-cpp-all-fields: ${{ matrix.skip-cpp-all-fields }}
      skip-golang-all-fields: ${{ matrix.skip-golang-all-fields }}
      initial-support: ${{ matrix.initial-support }}
      enable_conditional_testing: ${{ needs.calculate-conditions.outputs.conditional-testing == 'true' }}
      # Changed files flags
      changed_field: ${{ needs.check-changed-files.outputs.field }}
      changed_cpp: ${{ needs.check-changed-files.outputs.cpp }}
      changed_rust: ${{ needs.check-changed-files.outputs.rust }}
      changed_go: ${{ needs.check-changed-files.outputs.go }}
      changed_cpu_backend: ${{ needs.check-changed-files.outputs.cpu-backend }}
      changed_backend_api: ${{ needs.check-changed-files.outputs.backend-api }}
      # Feature change flags
      changed_ntt: ${{ needs.check-changed-files.outputs.ntt }}
      changed_fri: ${{ needs.check-changed-files.outputs.fri }}
      changed_sumcheck: ${{ needs.check-changed-files.outputs.sumcheck }}
      changed_poseidon: ${{ needs.check-changed-files.outputs.poseidon }}
      changed_poseidon2: ${{ needs.check-changed-files.outputs.poseidon2 }}
    secrets:
      backend_ssh_key: ${{ secrets[matrix.secret_key] }}
    strategy:
      matrix:
        backend: [cuda]
        # backend: [cuda, metal]
        include:
          - backend: cuda
            backend_upper: CUDA
            secret_key: CUDA_PULL_KEY
            runner: '["self-hosted", "Linux", "X64", "icicle"]'
            backend_branch: ${{ needs.extract-cuda-backend-branch.outputs.backend-branch }}
            skip-rust-all-curves: ""
            skip-cpp-all-curves: ""
            skip-golang-all-curves: "false"
            initial-support: false
          # - backend: metal
          #   backend_upper: METAL
          #   secret_key: METAL_PULL_KEY
          #   runner: '["self-hosted", "macOS", "ARM64", "icicle", "metal"]'
          #   backend_branch: ${{ needs.extract-metal-backend-branch.outputs.backend-branch }}
          #   skip-rust-all-curves: "--skip montgomery --skip ntt --skip poseidon --skip ecntt --skip sumcheck --skip program --skip msm_batch_not_shared --skip msm_skewed_distributions --skip vec_ops_scalars_inv --skip pairing --skip fri"
          #   skip-cpp-all-curves: ".*G2.*|.*ecntt.*|.*ProgramExecutorVecOp.*|.*Sumcheck.*|.*Fri.*|FieldTestBase.polynomialDivision|.*MerkleTree.*|.*poseidon.*|HashApiTest.KeccakLarge"
          #   skip-golang-all-curves: "true"
          #   initial-support: true
          #   supported_features: '["msm"]'

  test-hash:
    name: Hashes
    needs: [calculate-conditions, check-changed-files, check-format, extract-cuda-backend-branch]
    if: needs.calculate-conditions.outputs.should-run == 'true'
    uses: ./.github/workflows/test-hash.yml
    with:
      ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
      backend: ${{ matrix.backend }}
      backend_upper: ${{ matrix.backend_upper }}
      runner: ${{ matrix.runner }}
      backend_branch: ${{ matrix.backend_branch }}
      skip-rust: ${{ matrix.skip-rust }}
      skip-cpp: ${{ matrix.skip-cpp }}
      skip-golang: ${{ matrix.skip-golang }}
      initial-support: ${{ matrix.initial-support }}
      enable_conditional_testing: ${{ needs.calculate-conditions.outputs.conditional-testing == 'true' }}
      # Changed files flags
      changed_hash: ${{ needs.check-changed-files.outputs.hash }}
      changed_cpp: ${{ needs.check-changed-files.outputs.cpp }}
      changed_rust: ${{ needs.check-changed-files.outputs.rust }}
      changed_go: ${{ needs.check-changed-files.outputs.go }}
      changed_cpu_backend: ${{ needs.check-changed-files.outputs.cpu-backend }}
      changed_backend_api: ${{ needs.check-changed-files.outputs.backend-api }}
    secrets:
      backend_ssh_key: ${{ secrets[matrix.secret_key] }}
    strategy:
      matrix:
        backend: [cuda]
        # backend: [cuda, metal]
        include:
          - backend: cuda
            backend_upper: CUDA
            secret_key: CUDA_PULL_KEY
            runner: '["self-hosted", "Linux", "X64", "icicle"]'
            backend_branch: ${{ needs.extract-cuda-backend-branch.outputs.backend-branch }}
            skip-rust: ""
            skip-cpp: ""
            skip-golang: "false"
            initial-support: false
          # - backend: metal
          #   backend_upper: METAL
          #   secret_key: METAL_PULL_KEY
          #   runner: '["self-hosted", "macOS", "ARM64", "icicle", "metal"]'
          #   backend_branch: ${{ needs.extract-metal-backend-branch.outputs.backend-branch }}
          #   skip-rust: ""
          #   skip-cpp: ""
          #   skip-golang: "true"
          #   initial-support: true

  test-ring:
    name: Rings
    needs: [calculate-conditions, check-changed-files, check-format, extract-cuda-backend-branch]
    if: needs.calculate-conditions.outputs.should-run == 'true'
    uses: ./.github/workflows/test-ring.yml
    with:
      ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
      backend: ${{ matrix.backend }}
      backend_upper: ${{ matrix.backend_upper }}
      runner: ${{ matrix.runner }}
      backend_branch: ${{ matrix.backend_branch }}
      initial-support: ${{ matrix.initial-support }}
      enable_conditional_testing: ${{ needs.calculate-conditions.outputs.conditional-testing == 'true' }}
      # Changed files flags
      changed_ring: ${{ needs.check-changed-files.outputs.ring }}
      changed_cpp: ${{ needs.check-changed-files.outputs.cpp }}
      changed_rust: ${{ needs.check-changed-files.outputs.rust }}
      changed_cpu_backend: ${{ needs.check-changed-files.outputs.cpu-backend }}
      changed_backend_api: ${{ needs.check-changed-files.outputs.backend-api }}
      changed_ntt: ${{ needs.check-changed-files.outputs.ntt }}
    secrets:
      backend_ssh_key: ${{ secrets[matrix.secret_key] }}
    strategy:
      matrix:
        backend: [cuda]
        # backend: [cuda, metal]
        include:
          - backend: cuda
            backend_upper: CUDA
            secret_key: CUDA_PULL_KEY
            runner: '["self-hosted", "Linux", "X64", "icicle"]'
            backend_branch: ${{ needs.extract-cuda-backend-branch.outputs.backend-branch }}
            initial-support: false
          # - backend: metal
          #   backend_upper: METAL
          #   secret_key: METAL_PULL_KEY
          #   runner: '["self-hosted", "macOS", "ARM64", "icicle", "metal"]'
          #   backend_branch: ${{ needs.extract-metal-backend-branch.outputs.backend-branch }}
          #   initial-support: true

  test-runtime:
    name: Runtime
    needs: [calculate-conditions, check-changed-files, check-format, extract-cuda-backend-branch]
    if: needs.calculate-conditions.outputs.should-run == 'true'
    uses: ./.github/workflows/test-runtime.yml
    with:
      ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
      backend: ${{ matrix.backend }}
      backend_upper: ${{ matrix.backend_upper }}
      runner: ${{ matrix.runner }}
      backend_branch: ${{ matrix.backend_branch }}
      initial-support: ${{ matrix.initial-support }}
      enable_conditional_testing: ${{ needs.calculate-conditions.outputs.conditional-testing == 'true' }}
      # Changed files flags
      changed_runtime: ${{ needs.check-changed-files.outputs.runtime }}
      changed_cpp: ${{ needs.check-changed-files.outputs.cpp }}
      changed_rust: ${{ needs.check-changed-files.outputs.rust }}
      changed_go: ${{ needs.check-changed-files.outputs.go }}
      changed_cpu_backend: ${{ needs.check-changed-files.outputs.cpu-backend }}
    secrets:
      backend_ssh_key: ${{ secrets[matrix.secret_key] }}
    strategy:
      matrix:
        backend: [cuda]
        # backend: [cuda, metal]
        include:
          - backend: cuda
            backend_upper: CUDA
            secret_key: CUDA_PULL_KEY
            runner: '["self-hosted", "Linux", "X64", "icicle"]'
            backend_branch: ${{ needs.extract-cuda-backend-branch.outputs.backend-branch }}
            initial-support: false
          # - backend: metal
          #   backend_upper: METAL
          #   secret_key: METAL_PULL_KEY
          #   runner: '["self-hosted", "macOS", "ARM64", "icicle", "metal"]'
          #   backend_branch: ${{ needs.extract-metal-backend-branch.outputs.backend-branch }}
          #   initial-support: true

  test-pqc:
    name: PQC ML-KEM
    needs: [calculate-conditions, check-changed-files, check-format, extract-cuda-backend-branch]
    if: needs.calculate-conditions.outputs.should-run == 'true'
    uses: ./.github/workflows/test-pqc.yml
    with:
      ref: ${{ needs.calculate-conditions.outputs.checkout-ref }}
      runner: '["self-hosted", "Linux", "X64", "icicle"]'
      enable_conditional_testing: ${{ needs.calculate-conditions.outputs.conditional-testing == 'true' }}
      # Changed files flags
      changed_pqc: ${{ needs.check-changed-files.outputs.pqc }}
      changed_cpp: ${{ needs.check-changed-files.outputs.cpp }}
      changed_cpu_backend: ${{ needs.check-changed-files.outputs.cpu-backend }}
      changed_backend_api: ${{ needs.check-changed-files.outputs.backend-api }}
