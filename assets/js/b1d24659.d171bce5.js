"use strict";(self.webpackChunkicicle_docs=self.webpackChunkicicle_docs||[]).push([[65502],{22427:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"api/rust-bindings/pairing","title":"Pairings","description":"The pairing interface in icicle-core gives you access to efficient bilinear pairings on supported curves (BN254, BLS12-377, BLS12-381, BW6-761, \u2026).  Everything is wrapped in a safe, idiomatic Rust layer that automatically moves data between host and device memory when necessary.","source":"@site/versioned_docs/version-4.0.0/api/rust-bindings/pairing.md","sourceDirName":"api/rust-bindings","slug":"/api/rust-bindings/pairing","permalink":"/api/rust-bindings/pairing","draft":false,"unlisted":false,"editUrl":"https://github.com/ingonyama-zk/icicle/tree/main/docs/versioned_docs/version-4.0.0/api/rust-bindings/pairing.md","tags":[],"version":"4.0.0","lastUpdatedAt":1752654507000,"frontMatter":{},"sidebar":"apisidebar","previous":{"title":"Serialization","permalink":"/api/rust-bindings/serialization"},"next":{"title":"Matrix Operations","permalink":"/api/rust-bindings/matrix_ops"}}');var t=n(74848),a=n(28453);const s={},c="Pairings",o={},l=[{value:"Trait &amp; helper function",id:"trait--helper-function",level:2},{value:"Example",id:"example",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"pairings",children:"Pairings"})}),"\n",(0,t.jsxs)(i.p,{children:["The pairing interface in ",(0,t.jsx)(i.code,{children:"icicle-core"})," gives you access to efficient bilinear pairings on supported curves (BN254, BLS12-377, BLS12-381, BW6-761, \u2026).  Everything is wrapped in a safe, idiomatic Rust layer that automatically moves data between host and device memory when necessary."]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"trait--helper-function",children:"Trait & helper function"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-rust",children:"use icicle_core::{field::Field, projective::Projective};\nuse icicle_runtime::errors::IcicleError;\n\npub trait Pairing<P1: Projective, P2: Projective, F: Field> {\n    fn pairing(p: &P1::Affine, q: &P2::Affine) -> Result<F, IcicleError>;\n}\n\n/// Convenience free-function that dispatches to the trait implementation\npub fn pairing<P1, P2, F>(p: &P1::Affine, q: &P2::Affine) -> Result<F, IcicleError>\nwhere\n    P1: Projective + Pairing<P1, P2, F>,\n    P2: Projective,\n    F: Field,\n{\n    P1::pairing(p, q)\n}\n"})}),"\n",(0,t.jsxs)(i.p,{children:["Each curve crate that supports pairings provides the concrete implementation via the ",(0,t.jsx)(i.code,{children:"impl_pairing!"})," macro.  For BN254 (which is equipped with a single\u2010thread pairing on G1\xd7G2) the types look like:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-rust",children:"use icicle_bn254::curve::{G1Projective, G2Projective};\nuse icicle_bn254::pairing::PairingTargetField; // 12-degree extension field F\u209a\xb9\xb2\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-rust",children:'use icicle_bn254::curve::{G1Projective, G2Projective};\nuse icicle_core::pairing::pairing; // helper free-function\nuse icicle_core::traits::GenerateRandom;\n\n// Generate random points (G1 + G2 live in different groups)\nlet p = G1Projective::generate_random(1)[0].to_affine();\nlet q = G2Projective::generate_random(1)[0].to_affine();\n// Compute the pairing e(P, Q)\nlet gt = pairing::<G1Projective, G2Projective, _>(&p, &q).unwrap();\nprintln!("e(P, Q) = {:?}", gt);\n'})}),"\n",(0,t.jsxs)(i.p,{children:["The return value ",(0,t.jsx)(i.code,{children:"gt"})," lives in the ",(0,t.jsx)(i.strong,{children:"target field"})," (e.g. F\u209a\xb9\xb2 for BN254/BLS12 curves).  The exact name of the type depends on the curve crate \u2013 consult the module ",(0,t.jsx)(i.code,{children:"pairing"})," inside each crate."]})]})}function d(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>c});var r=n(96540);const t={},a=r.createContext(t);function s(e){const i=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:i},e.children)}}}]);