"use strict";(self.webpackChunkicicle_docs=self.webpackChunkicicle_docs||[]).push([[52662],{33598:i=>{i.exports=JSON.parse('{"version":{"pluginId":"default","version":"3.5.0","label":"3.5.0","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-3.5.0","isLast":false,"docsSidebars":{"GettingStartedSidebar":[{"type":"link","label":"Introduction","href":"/3.5.0/","docId":"introduction","unlisted":false},{"type":"category","label":"ICICLE","collapsed":false,"items":[{"type":"category","label":"Getting started","collapsed":false,"items":[{"type":"link","label":"Build ICICLE from source","href":"/3.5.0/icicle/build_from_source","docId":"icicle/build_from_source","unlisted":false},{"type":"category","label":"Programmers guide","collapsed":false,"items":[{"type":"link","label":"C++","href":"/3.5.0/icicle/programmers_guide/cpp","docId":"icicle/programmers_guide/cpp","unlisted":false},{"type":"link","label":"Rust","href":"/3.5.0/icicle/programmers_guide/rust","docId":"icicle/programmers_guide/rust","unlisted":false},{"type":"link","label":"Go","href":"/3.5.0/icicle/programmers_guide/go","docId":"icicle/programmers_guide/go","unlisted":false}],"collapsible":true,"href":"/3.5.0/icicle/programmers_guide/general"}],"collapsible":true,"href":"/3.5.0/icicle/getting_started"},{"type":"category","label":"Architecture overview","collapsed":false,"items":[{"type":"link","label":"CUDA Backend","href":"/3.5.0/icicle/install_cuda_backend","docId":"icicle/install_cuda_backend","unlisted":false},{"type":"link","label":"Multi-Device Support","href":"/3.5.0/icicle/multi-device","docId":"icicle/multi-device","unlisted":false}],"collapsible":true,"href":"/3.5.0/icicle/arch_overview"},{"type":"link","label":"ICICLE libraries","href":"/3.5.0/icicle/libraries","docId":"icicle/libraries","unlisted":false},{"type":"category","label":"Compute API","collapsed":true,"items":[{"type":"link","label":"MSM","href":"/3.5.0/icicle/primitives/msm","docId":"icicle/primitives/msm","unlisted":false},{"type":"link","label":"NTT / ECNTT","href":"/3.5.0/icicle/primitives/ntt","docId":"icicle/primitives/ntt","unlisted":false},{"type":"link","label":"Vector operations","href":"/3.5.0/icicle/primitives/vec_ops","docId":"icicle/primitives/vec_ops","unlisted":false},{"type":"link","label":"Program","href":"/3.5.0/icicle/primitives/program","docId":"icicle/primitives/program","unlisted":false},{"type":"link","label":"Polynomials","href":"/3.5.0/icicle/polynomials/overview","docId":"icicle/polynomials/overview","unlisted":false},{"type":"link","label":"Hash","href":"/3.5.0/icicle/primitives/hash","docId":"icicle/primitives/hash","unlisted":false},{"type":"link","label":"Merkle-Tree","href":"/3.5.0/icicle/primitives/merkle","docId":"icicle/primitives/merkle","unlisted":false},{"type":"link","label":"Sumcheck","href":"/3.5.0/icicle/primitives/sumcheck","docId":"icicle/primitives/sumcheck","unlisted":false},{"type":"category","label":"Golang bindings","collapsed":true,"items":[{"type":"category","label":"MSM","collapsed":true,"items":[{"type":"link","label":"MSM pre computation","href":"/3.5.0/icicle/golang-bindings/msm-pre-computation","docId":"icicle/golang-bindings/msm-pre-computation","unlisted":false}],"collapsible":true,"href":"/3.5.0/icicle/golang-bindings/msm"},{"type":"link","label":"NTT","href":"/3.5.0/icicle/golang-bindings/ntt","docId":"icicle/golang-bindings/ntt","unlisted":false},{"type":"link","label":"EC-NTT","href":"/3.5.0/icicle/golang-bindings/ecntt","docId":"icicle/golang-bindings/ecntt","unlisted":false},{"type":"link","label":"Vector operations","href":"/3.5.0/icicle/golang-bindings/vec-ops","docId":"icicle/golang-bindings/vec-ops","unlisted":false},{"type":"link","label":"Multi GPU Support","href":"/3.5.0/icicle/golang-bindings/multi-gpu","docId":"icicle/golang-bindings/multi-gpu","unlisted":false},{"type":"link","label":"Hash","href":"/3.5.0/icicle/golang-bindings/hash","docId":"icicle/golang-bindings/hash","unlisted":false},{"type":"link","label":"Merkle-Tree","href":"/3.5.0/icicle/golang-bindings/merkle","docId":"icicle/golang-bindings/merkle","unlisted":false}],"collapsible":true,"href":"/3.5.0/icicle/golang-bindings"},{"type":"category","label":"Rust bindings","collapsed":true,"items":[{"type":"link","label":"MSM","href":"/3.5.0/icicle/rust-bindings/msm","docId":"icicle/rust-bindings/msm","unlisted":false},{"type":"link","label":"NTT","href":"/3.5.0/icicle/rust-bindings/ntt","docId":"icicle/rust-bindings/ntt","unlisted":false},{"type":"link","label":"ECNTT","href":"/3.5.0/icicle/rust-bindings/ecntt","docId":"icicle/rust-bindings/ecntt","unlisted":false},{"type":"link","label":"Vector operations","href":"/3.5.0/icicle/rust-bindings/vec-ops","docId":"icicle/rust-bindings/vec-ops","unlisted":false},{"type":"link","label":"Polynomials","href":"/3.5.0/icicle/rust-bindings/polynomials","docId":"icicle/rust-bindings/polynomials","unlisted":false},{"type":"link","label":"Hash","href":"/3.5.0/icicle/rust-bindings/hash","docId":"icicle/rust-bindings/hash","unlisted":false},{"type":"link","label":"Merkle-Tree","href":"/3.5.0/icicle/rust-bindings/merkle","docId":"icicle/rust-bindings/merkle","unlisted":false},{"type":"link","label":"Sumcheck","href":"/3.5.0/icicle/rust-bindings/sumcheck","docId":"icicle/rust-bindings/sumcheck","unlisted":false}],"collapsible":true,"href":"/3.5.0/icicle/rust-bindings"}],"collapsible":true,"href":"/3.5.0/icicle/primitives/overview"},{"type":"link","label":"Migrate from ICICLE v2","href":"/3.5.0/icicle/migrate_from_v2","docId":"icicle/migrate_from_v2","unlisted":false},{"type":"link","label":"Google Colab Instructions","href":"/3.5.0/icicle/colab-instructions","docId":"icicle/colab-instructions","unlisted":false},{"type":"link","label":"ICICLE Provers","href":"/3.5.0/icicle/integrations","docId":"icicle/integrations","unlisted":false}],"collapsible":true,"href":"/3.5.0/icicle/overview"},{"type":"link","label":"Ingonyama Grant program","href":"/3.5.0/grants","docId":"grants","unlisted":false},{"type":"link","label":"Contributor guide","href":"/3.5.0/contributor-guide","docId":"contributor-guide","unlisted":false},{"type":"category","label":"Additional Resources","collapsed":false,"collapsible":false,"items":[{"type":"link","label":"YouTube","href":"https://www.youtube.com/@ingo_ZK"},{"type":"link","label":"Ingonyama Blog","href":"https://www.ingonyama.com/blog"},{"type":"link","label":"Ingopedia","href":"https://www.ingonyama.com/ingopedia"},{"href":"https://github.com/ingonyama-zk","type":"link","label":"GitHub"}]}]},"docs":{"contributor-guide":{"id":"contributor-guide","title":"Contributor\'s Guide","description":"We welcome all contributions with open arms. At Ingonyama we take a village approach, believing it takes many hands and minds to build a ecosystem.","sidebar":"GettingStartedSidebar"},"grants":{"id":"grants","title":"Ingonyama Grants Program 2.0","description":"Exactly one year ago, we launched our first-ever grants program, offering \\\\$100,000 to support research involving ICICLE. Today, we\u2019re excited to announce our second grants program \u2014 another \\\\$100,000 dedicated to researchers. Details below!","sidebar":"GettingStartedSidebar"},"icicle/arch_overview":{"id":"icicle/arch_overview","title":"Architecture Overview","description":"ICICLE v3 is designed with flexibility and extensibility in mind, offering a robust framework that supports multiple compute backends and accommodates various cryptographic needs. This section provides an overview of ICICLE\'s architecture, highlighting its open and closed components, multi-device support, and extensibility.","sidebar":"GettingStartedSidebar"},"icicle/benchmarks":{"id":"icicle/benchmarks","title":"Benchmarks","description":"TODO"},"icicle/build_from_source":{"id":"icicle/build_from_source","title":"Build ICICLE from source","description":"This guide will help you get started with building, testing, and installing ICICLE, whether you\'re using C++, Rust, or Go. It also covers installation of the CUDA backend and important build options.","sidebar":"GettingStartedSidebar"},"icicle/build_your_own_backend":{"id":"icicle/build_your_own_backend","title":"Build Your Own Backend","description":"TODO"},"icicle/colab-instructions":{"id":"icicle/colab-instructions","title":"Run ICICLE on Google Colab","description":"Google Colab lets you use a GPU free of charge, it\'s an Nvidia T4 GPU with 16 GB of memory, capable of running latest CUDA (tested on Cuda 12.2)","sidebar":"GettingStartedSidebar"},"icicle/faq_and_troubleshooting":{"id":"icicle/faq_and_troubleshooting","title":"FAQ and troubleshooting","description":"Frequently asked questions"},"icicle/getting_started":{"id":"icicle/getting_started","title":"Getting started Guide","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings":{"id":"icicle/golang-bindings","title":"Golang bindings","description":"Golang bindings allow you to use ICICLE as a golang library.","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/ecntt":{"id":"icicle/golang-bindings/ecntt","title":"ECNTT","description":"ECNTT Method","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/hash":{"id":"icicle/golang-bindings/hash","title":"ICICLE Hashing in Golang","description":"For a general overview of ICICLE\'s hashing logic and supported algorithms, check out the ICICLE Hashing Overview.","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/merkle":{"id":"icicle/golang-bindings/merkle","title":"Merkle Tree API Documentation (Golang)","description":"This is the Golang version of the Merkle Tree API Documentation (C++ documentation). It mirrors the structure and functionality of the C++ version, providing equivalent APIs in Golang.","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/msm":{"id":"icicle/golang-bindings/msm","title":"MSM","description":"MSM Example","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/msm-pre-computation":{"id":"icicle/golang-bindings/msm-pre-computation","title":"MSM Pre computation","description":"To understand the theory behind MSM pre computation technique refer to Niall Emmart\'s talk.","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/multi-gpu":{"id":"icicle/golang-bindings/multi-gpu","title":"Multi GPU APIs","description":"To learn more about the theory of Multi GPU programming refer to this part of documentation.","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/ntt":{"id":"icicle/golang-bindings/ntt","title":"NTT","description":"NTT Example","sidebar":"GettingStartedSidebar"},"icicle/golang-bindings/vec-ops":{"id":"icicle/golang-bindings/vec-ops","title":"Vector Operations","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/install_cuda_backend":{"id":"icicle/install_cuda_backend","title":"CUDA Backend","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/integrations":{"id":"icicle/integrations","title":"ICICLE Integrated Provers","description":"ICICLE has been used by companies and projects such as Celer Network, Consensys Gnark, EZKL, ZKWASM, Tachyon by Kroma Network, and others to accelerate their ZK proving pipeline.","sidebar":"GettingStartedSidebar"},"icicle/libraries":{"id":"icicle/libraries","title":"ICICLE libraries","description":"ICICLE is composed of two main logical parts:","sidebar":"GettingStartedSidebar"},"icicle/migrate_from_v2":{"id":"icicle/migrate_from_v2","title":"Migration from ICICLE v2 to v3","description":"ICICLE v3 introduces a unified interface for high-performance computing across various devices, extending the functionality that was previously limited to GPUs in Icicle V2. This guide will assist you in transitioning from ICICLE v2 to v3 by highlighting the key changes and providing examples for both C++ and Rust.","sidebar":"GettingStartedSidebar"},"icicle/multi-device":{"id":"icicle/multi-device","title":"Multi-Device with ICICLE","description":"If you are looking for the Multi-Device API documentation refer here for Rust and here for Golang.","sidebar":"GettingStartedSidebar"},"icicle/overview":{"id":"icicle/overview","title":"ICICLE Overview","description":"What is ICICLE?","sidebar":"GettingStartedSidebar"},"icicle/polynomials/overview":{"id":"icicle/polynomials/overview","title":"Polynomial API Overview","description":"Read our paper on the Polynomials API in ICICLE v2 by clicking here.","sidebar":"GettingStartedSidebar"},"icicle/primitives/hash":{"id":"icicle/primitives/hash","title":"ICICLE Hashing Logic","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/primitives/Icicle_Release_README":{"id":"icicle/primitives/Icicle_Release_README","title":"Icicle Release README","description":"Overview"},"icicle/primitives/merkle":{"id":"icicle/primitives/merkle","title":"Merkle Tree API Documentation","description":"What is a Merkle Tree?","sidebar":"GettingStartedSidebar"},"icicle/primitives/msm":{"id":"icicle/primitives/msm","title":"MSM - Multi Scalar Multiplication","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/primitives/ntt":{"id":"icicle/primitives/ntt","title":"NTT - Number Theoretic Transform","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/primitives/overview":{"id":"icicle/primitives/overview","title":"ICICLE Compute APIs","description":"This section of the documentation is dedicated to the main APIs provided by ICICLE. We will cover the usage and internal details of our core primitives, such as Multi-Scalar Multiplication (MSM), Number Theoretic Transform (NTT), and various hashing algorithms. Each primitive has its own dedicated page with examples and explanations for C++, Rust, and Go.","sidebar":"GettingStartedSidebar"},"icicle/primitives/poseidon":{"id":"icicle/primitives/poseidon","title":"Poseidon","description":"TODO update for V3"},"icicle/primitives/program":{"id":"icicle/primitives/program","title":"Programs","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/primitives/sumcheck":{"id":"icicle/primitives/sumcheck","title":"Sumcheck API Documentation","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/primitives/vec_ops":{"id":"icicle/primitives/vec_ops","title":"Vector Operations API","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/programmers_guide/cpp":{"id":"icicle/programmers_guide/cpp","title":"Icicle C++ Usage Guide","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/programmers_guide/general":{"id":"icicle/programmers_guide/general","title":"Icicle Programmer\'s Guide","description":"Compute APIs","sidebar":"GettingStartedSidebar"},"icicle/programmers_guide/go":{"id":"icicle/programmers_guide/go","title":"ICICLE Golang Usage Guide","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/programmers_guide/rust":{"id":"icicle/programmers_guide/rust","title":"Icicle Rust Usage Guide","description":"Overview","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings":{"id":"icicle/rust-bindings","title":"Rust bindings","description":"Rust bindings allow you to use ICICLE as a rust library.","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/ecntt":{"id":"icicle/rust-bindings/ecntt","title":"ECNTT","description":"ECNTT Method","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/hash":{"id":"icicle/rust-bindings/hash","title":"ICICLE Hashing in Rust","description":"For a general overview of ICICLE\'s hashing logic and supported algorithms, check out the ICICLE Hashing Overview.","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/merkle":{"id":"icicle/rust-bindings/merkle","title":"Merkle Tree API Documentation (Rust)","description":"This is the Rust version of the Merkle Tree API Documentation (C++ documentation). It mirrors the structure and functionality of the C++ version, providing equivalent APIs in Rust.","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/msm":{"id":"icicle/rust-bindings/msm","title":"MSM","description":"MSM API Overview","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/multi-gpu":{"id":"icicle/rust-bindings/multi-gpu","title":"Multi GPU APIs","description":"TODO update for V3"},"icicle/rust-bindings/ntt":{"id":"icicle/rust-bindings/ntt","title":"NTT","description":"NTT API overview","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/polynomials":{"id":"icicle/rust-bindings/polynomials","title":"Rust FFI Bindings for Univariate Polynomial","description":"Please refer to the Polynomials overview page for a deep overview. This section is a brief description of the Rust FFI bindings.","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/sumcheck":{"id":"icicle/rust-bindings/sumcheck","title":"Sumcheck","description":"Sumcheck API Overview","sidebar":"GettingStartedSidebar"},"icicle/rust-bindings/vec-ops":{"id":"icicle/rust-bindings/vec-ops","title":"Vector Operations API","description":"Our vector operations API includes fundamental methods for addition, subtraction, and multiplication of vectors, with support for both host and device memory, as well as batched operations.","sidebar":"GettingStartedSidebar"},"introduction":{"id":"introduction","title":"","description":"Ingonyama is a next-generation semiconductor company focusing on Zero-Knowledge Proof hardware acceleration. We build accelerators for advanced cryptography, unlocking real-time applications. Our focus is on democratizing access to compute-intensive cryptography and making it accessible for developers to build upon.","sidebar":"GettingStartedSidebar"}}}}')}}]);