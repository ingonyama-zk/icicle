"use strict";(self.webpackChunkicicle_docs=self.webpackChunkicicle_docs||[]).push([[5505],{16310:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"icicle/primitives/overview","title":"ICICLE Compute APIs","description":"This section of the documentation is dedicated to the main APIs provided by ICICLE. We will cover the usage and internal details of our core primitives, such as Multi-Scalar Multiplication (MSM), Number Theoretic Transform (NTT), and various hashing algorithms. Each primitive has its own dedicated page with examples and explanations for C++, Rust, and Go.","source":"@site/versioned_docs/version-3.1.0/icicle/primitives/overview.md","sourceDirName":"icicle/primitives","slug":"/icicle/primitives/overview","permalink":"/3.1.0/icicle/primitives/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/ingonyama-zk/icicle/tree/main/docs/versioned_docs/version-3.1.0/icicle/primitives/overview.md","tags":[],"version":"3.1.0","lastUpdatedBy":"Elan","lastUpdatedAt":1743510995000,"frontMatter":{},"sidebar":"GettingStartedSidebar","previous":{"title":"ICICLE libraries","permalink":"/3.1.0/icicle/libraries"},"next":{"title":"MSM","permalink":"/3.1.0/icicle/primitives/msm"}}');var s=t(74848),n=t(28453);const c={},o="ICICLE Compute APIs",a={},l=[{value:"Supported primitives",id:"supported-primitives",level:2}];function d(e){const i={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"icicle-compute-apis",children:"ICICLE Compute APIs"})}),"\n",(0,s.jsx)(i.p,{children:"This section of the documentation is dedicated to the main APIs provided by ICICLE. We will cover the usage and internal details of our core primitives, such as Multi-Scalar Multiplication (MSM), Number Theoretic Transform (NTT), and various hashing algorithms. Each primitive has its own dedicated page with examples and explanations for C++, Rust, and Go."}),"\n",(0,s.jsx)(i.h2,{id:"supported-primitives",children:"Supported primitives"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/3.1.0/icicle/primitives/msm",children:"MSM"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/3.1.0/icicle/primitives/ntt",children:"NTT"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/3.1.0/icicle/primitives/vec_ops",children:"Vector Operations"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/3.1.0/icicle/polynomials/overview",children:"Polynomials"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/3.1.0/icicle/primitives/hash",children:"Hash"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"/3.1.0/icicle/primitives/merkle",children:"Merkle-tree commitment"})}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>c,x:()=>o});var r=t(96540);const s={},n=r.createContext(s);function c(e){const i=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(n.Provider,{value:i},e.children)}}}]);