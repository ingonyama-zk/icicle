"use strict";(self.webpackChunkicicle_docs=self.webpackChunkicicle_docs||[]).push([[14895],{14490:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"icicle/rust-bindings/serialization","title":"Serialization","description":"Serialization API Overview","source":"@site/versioned_docs/version-3.8.0/icicle/rust-bindings/serialization.md","sourceDirName":"icicle/rust-bindings","slug":"/icicle/rust-bindings/serialization","permalink":"/3.8.0/icicle/rust-bindings/serialization","draft":false,"unlisted":false,"editUrl":"https://github.com/ingonyama-zk/icicle/tree/main/docs/versioned_docs/version-3.8.0/icicle/rust-bindings/serialization.md","tags":[],"version":"3.8.0","lastUpdatedAt":1749667467000,"frontMatter":{},"sidebar":"GettingStartedSidebar","previous":{"title":"FRI","permalink":"/3.8.0/icicle/rust-bindings/fri"},"next":{"title":"Migrate from ICICLE v2","permalink":"/3.8.0/icicle/migrate_from_v2"}}');var n=r(74848),t=r(28453);const l={},o="Serialization",c={},a=[{value:"Serialization API Overview",id:"serialization-api-overview",level:2},{value:"<strong>Structs</strong>",id:"structs",level:3},{value:"<strong>Methods:</strong>",id:"methods",level:5},{value:"<strong>Example Usage</strong>",id:"example-usage",level:2},{value:"<strong>Serializable Structs</strong>",id:"serializable-structs",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"serialization",children:"Serialization"})}),"\n",(0,n.jsx)(i.h2,{id:"serialization-api-overview",children:"Serialization API Overview"}),"\n",(0,n.jsx)(i.h3,{id:"structs",children:(0,n.jsx)(i.strong,{children:"Structs"})}),"\n",(0,n.jsxs)(i.p,{children:["Serialization and deserialization for Icicle structures are facilitated by the ",(0,n.jsx)(i.a,{href:"https://serde.rs/",children:"Serde library"}),", allowing flexibility with the choice of serializer. These processes internally call FFI functions to manage the conversion between Rust and the underlying representations."]}),"\n",(0,n.jsx)(i.h5,{id:"methods",children:(0,n.jsx)(i.strong,{children:"Methods:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>"})}),":\nSerializes the structure into a byte array using the provided serializer."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:(0,n.jsx)(i.code,{children:"deserialize<'de, D>(deserializer: D) -> Result<Self, D::Error>"})}),":\nDeserializes a byte array into an Icicle structure. This method reconstructs the structure from its serialized form."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"example-usage",children:(0,n.jsx)(i.strong,{children:"Example Usage"})}),"\n",(0,n.jsxs)(i.p,{children:["Below is an example demonstrating how to serialize and deserialize a ",(0,n.jsx)(i.code,{children:"SumcheckProof"}),"."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-rust",children:'use serde::{Serialize, Deserialize};\nuse icicle_core::sumcheck::SumcheckProof;\nuse serde_json;\n\nlet proof: SumcheckProof = /* obtain or construct a proof */;\n\n// Serialize the proof\nlet serialized_proof = serde_json::to_string(proof).expect("Failed to serialize proof");\n\n// Deserialize the proof\nlet deserialized_proof: SumcheckProof = serde_json::from_str(&serialized_proof).expect("Failed to deserialize proof");\n\n'})}),"\n",(0,n.jsx)(i.h2,{id:"serializable-structs",children:(0,n.jsx)(i.strong,{children:"Serializable Structs"})}),"\n",(0,n.jsx)(i.p,{children:"The following structs are currently supported for serialization and deserialization:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/3.8.0/icicle/rust-bindings/merkle",children:(0,n.jsx)(i.code,{children:"MerkleProof"})})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/3.8.0/icicle/rust-bindings/sumcheck",children:(0,n.jsx)(i.code,{children:"SumcheckProof"})})}),"\n",(0,n.jsx)(i.li,{children:(0,n.jsx)(i.a,{href:"/3.8.0/icicle/rust-bindings/fri",children:(0,n.jsx)(i.code,{children:"FriProof"})})}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,i,r)=>{r.d(i,{R:()=>l,x:()=>o});var s=r(96540);const n={},t=s.createContext(n);function l(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);