"use strict";(self.webpackChunkicicle_docs=self.webpackChunkicicle_docs||[]).push([[11567],{55226:i=>{i.exports=JSON.parse('{"version":{"pluginId":"default","version":"4.0.0","label":"4.0.0","banner":null,"badge":true,"noIndex":false,"className":"docs-version-4.0.0","isLast":true,"docsSidebars":{"GettingStartedSidebar":[{"type":"category","label":"Introduction","collapsed":false,"items":[{"type":"link","label":"Overview","href":"/","docId":"start/intro/start","unlisted":false},{"type":"link","label":"Setup Guide","href":"/setup","docId":"start/intro/getting_started","unlisted":false}],"collapsible":true},{"type":"category","label":"Architecture","collapsed":false,"items":[{"type":"link","label":"Architecture Overview","href":"/start/architecture/arch_overview","docId":"start/architecture/arch_overview","unlisted":false},{"type":"link","label":"Build Your Own Backend","href":"/start/architecture/build_your_own_backend","docId":"start/architecture/build_your_own_backend","unlisted":false},{"type":"link","label":"GPU Backends","href":"/start/architecture/install_gpu_backend","docId":"start/architecture/install_gpu_backend","unlisted":false},{"type":"link","label":"ICICLE libraries","href":"/start/architecture/libraries","docId":"start/architecture/libraries","unlisted":false},{"type":"link","label":"Multi-Device with ICICLE","href":"/start/architecture/multi-device","docId":"start/architecture/multi-device","unlisted":false}],"collapsible":true},{"type":"category","label":"Programmer\'s Guide","collapsed":false,"items":[{"type":"link","label":"ICICLE Programmer\'s Guide","href":"/start/programmers_guide/general","docId":"start/programmers_guide/general","unlisted":false},{"type":"link","label":"Build ICICLE from source","href":"/start/programmers_guide/build_from_source","docId":"start/programmers_guide/build_from_source","unlisted":false},{"type":"link","label":"ICICLE C++ Usage Guide","href":"/start/programmers_guide/cpp","docId":"start/programmers_guide/cpp","unlisted":false},{"type":"link","label":"ICICLE Golang Usage Guide","href":"/start/programmers_guide/go","docId":"start/programmers_guide/go","unlisted":false},{"type":"link","label":"ICICLE Rust Usage Guide","href":"/start/programmers_guide/rust","docId":"start/programmers_guide/rust","unlisted":false}],"collapsible":true},{"type":"category","label":"Integration & Support","collapsed":false,"items":[{"type":"link","label":"Contributor\'s Guide","href":"/start/integration-&-support/contributor-guide","docId":"start/integration-&-support/contributor-guide","unlisted":false},{"type":"link","label":"Frequently Asked Questions","href":"/start/integration-&-support/faq_and_troubleshooting","docId":"start/integration-&-support/faq_and_troubleshooting","unlisted":false},{"type":"link","label":"Ingonyama Grants Program 2.0","href":"/start/integration-&-support/grants","docId":"start/integration-&-support/grants","unlisted":false},{"type":"link","label":"ICICLE Integrated Provers","href":"/start/integration-&-support/integrations","docId":"start/integration-&-support/integrations","unlisted":false},{"type":"link","label":"Run ICICLE on Google Colab","href":"/start/integration-&-support/colab-instructions","docId":"start/integration-&-support/colab-instructions","unlisted":false},{"type":"link","label":"Migration from ICICLE v2 to v3","href":"/start/integration-&-support/migrate_from_v2","docId":"start/integration-&-support/migrate_from_v2","unlisted":false},{"type":"link","label":"Migration from ICICLE v3 to v4","href":"/start/integration-&-support/migrate_from_v3","docId":"start/integration-&-support/migrate_from_v3","unlisted":false},{"type":"link","label":"Benchmarks","href":"/start/integration-&-support/benchmarks","docId":"start/integration-&-support/benchmarks","unlisted":false}],"collapsible":true}],"apisidebar":[{"type":"link","label":"API Overview","href":"/apioverview","docId":"api/overview","unlisted":false},{"type":"category","label":"C++","collapsed":false,"items":[{"type":"link","label":"C++ Overview","href":"/cppstart","docId":"api/cpp/cppstart","unlisted":false},{"type":"link","label":"MSM","href":"/api/cpp/msm","docId":"api/cpp/msm","unlisted":false},{"type":"link","label":"NTT / ECNTT","href":"/api/cpp/ntt","docId":"api/cpp/ntt","unlisted":false},{"type":"link","label":"Vector operations","href":"/api/cpp/vec_ops","docId":"api/cpp/vec_ops","unlisted":false},{"type":"link","label":"Program","href":"/api/cpp/program","docId":"api/cpp/program","unlisted":false},{"type":"link","label":"Polynomials","href":"/api/cpp/polynomials/overview","docId":"api/cpp/polynomials/overview","unlisted":false},{"type":"link","label":"Hash","href":"/api/cpp/hash","docId":"api/cpp/hash","unlisted":false},{"type":"link","label":"Merkle-Tree","href":"/api/cpp/merkle","docId":"api/cpp/merkle","unlisted":false},{"type":"link","label":"Sumcheck","href":"/api/cpp/sumcheck","docId":"api/cpp/sumcheck","unlisted":false},{"type":"link","label":"FRI","href":"/api/cpp/fri","docId":"api/cpp/fri","unlisted":false},{"type":"link","label":"Pairings","href":"/icicle/primitives/pairings","docId":"api/cpp/pairings","unlisted":false},{"type":"link","label":"PQC ML-KEM","href":"/api/cpp/lattice/pqc_ml_kem","docId":"api/cpp/lattice/pqc_ml_kem","unlisted":false},{"type":"link","label":"Serialization","href":"/api/cpp/serialization","docId":"api/cpp/serialization","unlisted":false},{"type":"link","label":"Matrix Operations","href":"/api/cpp/matrix_ops","docId":"api/cpp/matrix_ops","unlisted":false}],"collapsible":true},{"type":"category","label":"Golang Bindings","collapsed":false,"items":[{"type":"link","label":"Golang Overview","href":"/gooverview","docId":"api/golang-bindings/golang-bindings","unlisted":false},{"type":"link","label":"MSM","href":"/api/golang-bindings/msm","docId":"api/golang-bindings/msm","unlisted":false},{"type":"link","label":"MSM pre-computation","href":"/api/golang-bindings/msm-pre-computation","docId":"api/golang-bindings/msm-pre-computation","unlisted":false},{"type":"link","label":"NTT","href":"/api/golang-bindings/ntt","docId":"api/golang-bindings/ntt","unlisted":false},{"type":"link","label":"EC-NTT","href":"/api/golang-bindings/ecntt","docId":"api/golang-bindings/ecntt","unlisted":false},{"type":"link","label":"Vector operations","href":"/api/golang-bindings/vec-ops","docId":"api/golang-bindings/vec-ops","unlisted":false},{"type":"link","label":"Multi GPU Support","href":"/api/golang-bindings/multi-gpu","docId":"api/golang-bindings/multi-gpu","unlisted":false},{"type":"link","label":"Hash","href":"/api/golang-bindings/hash","docId":"api/golang-bindings/hash","unlisted":false},{"type":"link","label":"Merkle-Tree","href":"/api/golang-bindings/merkle","docId":"api/golang-bindings/merkle","unlisted":false},{"type":"link","label":"PQC ML-KEM","href":"/api/golang-bindings/lattice/pqc-ml-kem","docId":"api/golang-bindings/lattice/pqc-ml-kem","unlisted":false}],"collapsible":true},{"type":"category","label":"Rust Bindings","collapsed":false,"items":[{"type":"link","label":"Rust Overview","href":"/rustoverview","docId":"api/rust-bindings/rust-bindings","unlisted":false},{"type":"link","label":"MSM","href":"/api/rust-bindings/msm","docId":"api/rust-bindings/msm","unlisted":false},{"type":"link","label":"NTT","href":"/api/rust-bindings/ntt","docId":"api/rust-bindings/ntt","unlisted":false},{"type":"link","label":"ECNTT","href":"/api/rust-bindings/ecntt","docId":"api/rust-bindings/ecntt","unlisted":false},{"type":"link","label":"Vector operations","href":"/api/rust-bindings/vec-ops","docId":"api/rust-bindings/vec-ops","unlisted":false},{"type":"link","label":"Program","href":"/api/rust-bindings/program","docId":"api/rust-bindings/program","unlisted":false},{"type":"link","label":"Polynomials","href":"/api/rust-bindings/polynomials","docId":"api/rust-bindings/polynomials","unlisted":false},{"type":"link","label":"Hash","href":"/api/rust-bindings/hash","docId":"api/rust-bindings/hash","unlisted":false},{"type":"link","label":"Merkle-Tree","href":"/api/rust-bindings/merkle","docId":"api/rust-bindings/merkle","unlisted":false},{"type":"link","label":"Sumcheck","href":"/api/rust-bindings/sumcheck","docId":"api/rust-bindings/sumcheck","unlisted":false},{"type":"link","label":"FRI","href":"/api/rust-bindings/fri","docId":"api/rust-bindings/fri","unlisted":false},{"type":"link","label":"Lattice SNARKs","href":"/api/rust-bindings/lattice/lattice-snarks","docId":"api/rust-bindings/lattice/lattice-snarks","unlisted":false},{"type":"link","label":"PQC ML-KEM","href":"/api/rust-bindings/lattice/pqc-ml-kem","docId":"api/rust-bindings/lattice/pqc-ml-kem","unlisted":false},{"type":"link","label":"Serialization","href":"/api/rust-bindings/serialization","docId":"api/rust-bindings/serialization","unlisted":false},{"type":"link","label":"Pairings","href":"/api/rust-bindings/pairing","docId":"api/rust-bindings/pairing","unlisted":false},{"type":"link","label":"Matrix Operations","href":"/api/rust-bindings/matrix_ops","docId":"api/rust-bindings/matrix_ops","unlisted":false}],"collapsible":true}]},"docs":{"api/cpp/cppstart":{"id":"api/cpp/cppstart","title":"C++ Overview","description":"Explore the available primitives in the C++ API:","sidebar":"apisidebar"},"api/cpp/fri":{"id":"api/cpp/fri","title":"FRI API Documentation","description":"Overview","sidebar":"apisidebar"},"api/cpp/hash":{"id":"api/cpp/hash","title":"ICICLE Hashing Logic","description":"Overview","sidebar":"apisidebar"},"api/cpp/Icicle_Release_README":{"id":"api/cpp/Icicle_Release_README","title":"ICICLE Release README","description":"Overview"},"api/cpp/lattice/pqc_ml_kem":{"id":"api/cpp/lattice/pqc_ml_kem","title":"ML-KEM \u2013 Post-Quantum Key Encapsulation (Kyber)","description":"Overview","sidebar":"apisidebar"},"api/cpp/matrix_ops":{"id":"api/cpp/matrix_ops","title":"Matrix Operations (C++ API)","description":"ICICLE provides efficient, flexible matrix operations for cryptographic and scientific computing, supporting both CPU and GPU backends. The API is designed for high performance, batch processing, and seamless device/host memory management.","sidebar":"apisidebar"},"api/cpp/merkle":{"id":"api/cpp/merkle","title":"Merkle Tree API Documentation","description":"What is a Merkle Tree?","sidebar":"apisidebar"},"api/cpp/msm":{"id":"api/cpp/msm","title":"MSM - Multi Scalar Multiplication","description":"Overview","sidebar":"apisidebar"},"api/cpp/ntt":{"id":"api/cpp/ntt","title":"NTT - Number Theoretic Transform","description":"Overview","sidebar":"apisidebar"},"api/cpp/pairings":{"id":"api/cpp/pairings","title":"Pairings in ICICLE","description":"Pairings are a fundamental cryptographic primitive that enable a wide range of advanced cryptographic protocols, including zero-knowledge proofs, identity-based encryption, and more. ICICLE provides efficient implementations of cryptographic pairings optimized for various hardware backends.","sidebar":"apisidebar"},"api/cpp/polynomials/overview":{"id":"api/cpp/polynomials/overview","title":"Polynomial API Overview","description":"Read our paper on the Polynomials API in ICICLE v2 by clicking here.","sidebar":"apisidebar"},"api/cpp/program":{"id":"api/cpp/program","title":"Programs","description":"Overview","sidebar":"apisidebar"},"api/cpp/serialization":{"id":"api/cpp/serialization","title":"Serialization","description":"Interface Description","sidebar":"apisidebar"},"api/cpp/sumcheck":{"id":"api/cpp/sumcheck","title":"Sumcheck API Documentation","description":"Overview","sidebar":"apisidebar"},"api/cpp/vec_ops":{"id":"api/cpp/vec_ops","title":"Vector Operations API","description":"Overview","sidebar":"apisidebar"},"api/golang-bindings/ecntt":{"id":"api/golang-bindings/ecntt","title":"ECNTT","description":"ECNTT Method","sidebar":"apisidebar"},"api/golang-bindings/golang-bindings":{"id":"api/golang-bindings/golang-bindings","title":"Golang Overview","description":"Golang bindings allow you to use ICICLE as a golang library.","sidebar":"apisidebar"},"api/golang-bindings/hash":{"id":"api/golang-bindings/hash","title":"ICICLE Hashing in Golang","description":"For a general overview of ICICLE\'s hashing logic and supported algorithms, check out the ICICLE Hashing Overview.","sidebar":"apisidebar"},"api/golang-bindings/lattice/pqc-ml-kem":{"id":"api/golang-bindings/lattice/pqc-ml-kem","title":"ML-KEM (Kyber) \u2013 Golang bindings","description":"For an in-depth explanation of the primitive, performance advice and backend-specific tuning knobs see the C++ ML-KEM guide.","sidebar":"apisidebar"},"api/golang-bindings/merkle":{"id":"api/golang-bindings/merkle","title":"Merkle Tree API Documentation (Golang)","description":"This is the Golang version of the Merkle Tree API Documentation (C++ documentation). It mirrors the structure and functionality of the C++ version, providing equivalent APIs in Golang.","sidebar":"apisidebar"},"api/golang-bindings/msm":{"id":"api/golang-bindings/msm","title":"MSM","description":"MSM Example","sidebar":"apisidebar"},"api/golang-bindings/msm-pre-computation":{"id":"api/golang-bindings/msm-pre-computation","title":"MSM Pre computation","description":"To understand the theory behind MSM pre computation technique refer to Niall Emmart\'s talk.","sidebar":"apisidebar"},"api/golang-bindings/multi-gpu":{"id":"api/golang-bindings/multi-gpu","title":"Multi GPU APIs","description":"To learn more about the theory of Multi GPU programming refer to this part of documentation.","sidebar":"apisidebar"},"api/golang-bindings/ntt":{"id":"api/golang-bindings/ntt","title":"NTT","description":"NTT Example","sidebar":"apisidebar"},"api/golang-bindings/vec-ops":{"id":"api/golang-bindings/vec-ops","title":"Vector Operations","description":"Overview","sidebar":"apisidebar"},"api/overview":{"id":"api/overview","title":"API Overview","description":"This section provides detailed documentation for ICICLE\u2019s core APIs, including MSM, NTT, and hashing primitives. Each API includes dedicated examples for C++, Go, and Rust\u2014choose your preferred language to get started.","sidebar":"apisidebar"},"api/rust-bindings/ecntt":{"id":"api/rust-bindings/ecntt","title":"ECNTT","description":"ECNTT Method","sidebar":"apisidebar"},"api/rust-bindings/fri":{"id":"api/rust-bindings/fri","title":"FRI","description":"FRI API Overview","sidebar":"apisidebar"},"api/rust-bindings/hash":{"id":"api/rust-bindings/hash","title":"ICICLE Hashing in Rust","description":"For a general overview of ICICLE\'s hashing logic and supported algorithms, check out the ICICLE Hashing Overview.","sidebar":"apisidebar"},"api/rust-bindings/lattice/lattice-snarks":{"id":"api/rust-bindings/lattice/lattice-snarks","title":"Lattices \u2014 Rust API Overview","description":"Overview","sidebar":"apisidebar"},"api/rust-bindings/lattice/pqc-ml-kem":{"id":"api/rust-bindings/lattice/pqc-ml-kem","title":"ML-KEM (Kyber) \u2013 Rust bindings","description":"For an in-depth explanation of the primitive, performance advice and backend-specific tuning knobs see the C++ ML-KEM guide.","sidebar":"apisidebar"},"api/rust-bindings/matrix_ops":{"id":"api/rust-bindings/matrix_ops","title":"Matrix Operations (Rust bindings)","description":"icicle-core exposes a set of matrix primitives that operate on data located either in host memory or on the GPU. These are implemented on top of \u2013 and share the same configuration structure as \u2013 the generic vector-operations backend (VecOps).","sidebar":"apisidebar"},"api/rust-bindings/merkle":{"id":"api/rust-bindings/merkle","title":"Merkle Tree API Documentation (Rust)","description":"This is the Rust version of the Merkle Tree API Documentation (C++ documentation). It mirrors the structure and functionality of the C++ version, providing equivalent APIs in Rust.","sidebar":"apisidebar"},"api/rust-bindings/msm":{"id":"api/rust-bindings/msm","title":"MSM","description":"MSM API Overview","sidebar":"apisidebar"},"api/rust-bindings/multi-gpu":{"id":"api/rust-bindings/multi-gpu","title":"Multi GPU APIs","description":"TODO update for V3"},"api/rust-bindings/ntt":{"id":"api/rust-bindings/ntt","title":"NTT","description":"NTT API overview","sidebar":"apisidebar"},"api/rust-bindings/pairing":{"id":"api/rust-bindings/pairing","title":"Pairings","description":"The pairing interface in icicle-core gives you access to efficient bilinear pairings on supported curves (BN254, BLS12-377, BLS12-381, BW6-761, \u2026).  Everything is wrapped in a safe, idiomatic Rust layer that automatically moves data between host and device memory when necessary.","sidebar":"apisidebar"},"api/rust-bindings/polynomials":{"id":"api/rust-bindings/polynomials","title":"Rust FFI Bindings for Univariate Polynomial","description":"Please refer to the Polynomials overview page for a deep overview. This section is a brief description of the Rust FFI bindings.","sidebar":"apisidebar"},"api/rust-bindings/program":{"id":"api/rust-bindings/program","title":"Rust FFI Bindings for Program","description":"Please refer to the Program overview page for additional detail. This section is a brief description of the Rust FFI bindings.","sidebar":"apisidebar"},"api/rust-bindings/rust-bindings":{"id":"api/rust-bindings/rust-bindings","title":"Rust Overview","description":"Rust bindings allow you to use ICICLE as a rust library.","sidebar":"apisidebar"},"api/rust-bindings/serialization":{"id":"api/rust-bindings/serialization","title":"Serialization","description":"Serialization API Overview","sidebar":"apisidebar"},"api/rust-bindings/sumcheck":{"id":"api/rust-bindings/sumcheck","title":"Sumcheck","description":"Sumcheck API Overview","sidebar":"apisidebar"},"api/rust-bindings/vec-ops":{"id":"api/rust-bindings/vec-ops","title":"Vector Operations API","description":"Our vector operations API includes fundamental methods for addition, subtraction, multiplication, division, and more, with support for both host and device memory, as well as batched operations.","sidebar":"apisidebar"},"start/architecture/arch_overview":{"id":"start/architecture/arch_overview","title":"Architecture Overview","description":"ICICLE is designed with flexibility and extensibility in mind, offering a robust framework that supports multiple compute backends and accommodates various cryptographic needs. This section provides an overview of ICICLE\'s architecture, highlighting its open and closed components, multi-device support, and extensibility.","sidebar":"GettingStartedSidebar"},"start/architecture/build_your_own_backend":{"id":"start/architecture/build_your_own_backend","title":"Build Your Own Backend","description":"This page is coming soon and will be updated shortly. We\'re actively working on the content and will publish it here as soon as it\'s ready. Stay tuned!","sidebar":"GettingStartedSidebar"},"start/architecture/install_gpu_backend":{"id":"start/architecture/install_gpu_backend","title":"GPU Backends","description":"Overview","sidebar":"GettingStartedSidebar"},"start/architecture/libraries":{"id":"start/architecture/libraries","title":"ICICLE libraries","description":"Device Library","sidebar":"GettingStartedSidebar"},"start/architecture/multi-device":{"id":"start/architecture/multi-device","title":"Multi-Device with ICICLE","description":"If you are looking for the Multi-Device API documentation refer here for Rust and here for Golang.","sidebar":"GettingStartedSidebar"},"start/integration-&-support/benchmarks":{"id":"start/integration-&-support/benchmarks","title":"Benchmarks","description":"","sidebar":"GettingStartedSidebar"},"start/integration-&-support/colab-instructions":{"id":"start/integration-&-support/colab-instructions","title":"Run ICICLE on Google Colab","description":"Google Colab lets you use a GPU free of charge, it\'s an Nvidia T4 GPU with 16 GB of memory, capable of running latest CUDA (tested on Cuda 12.2)","sidebar":"GettingStartedSidebar"},"start/integration-&-support/contributor-guide":{"id":"start/integration-&-support/contributor-guide","title":"Contributor\'s Guide","description":"We welcome all contributions with open arms. At Ingonyama we take a village approach, believing it takes many hands and minds to build a ecosystem. See full CLA here","sidebar":"GettingStartedSidebar"},"start/integration-&-support/faq_and_troubleshooting":{"id":"start/integration-&-support/faq_and_troubleshooting","title":"Frequently Asked Questions","description":"","sidebar":"GettingStartedSidebar"},"start/integration-&-support/grants":{"id":"start/integration-&-support/grants","title":"Ingonyama Grants Program 2.0","description":"Exactly one year ago, we launched our first-ever grants program, offering \\\\$100,000 to support research in high-speed cryptography using ICICLE. Today, we\u2019re excited to announce our second grants program \u2014 another \\\\$100,000 dedicated to researchers. Details below!","sidebar":"GettingStartedSidebar"},"start/integration-&-support/integrations":{"id":"start/integration-&-support/integrations","title":"ICICLE Integrated Provers","description":"ICICLE has been used by companies and projects such as Celer Network, Consensys Gnark, EZKL, ZKWASM, Tachyon by Kroma Network, and others to accelerate their ZK proving pipeline.","sidebar":"GettingStartedSidebar"},"start/integration-&-support/migrate_from_v2":{"id":"start/integration-&-support/migrate_from_v2","title":"Migration from ICICLE v2 to v3","description":"ICICLE v3 introduces a unified interface for high-performance computing across various devices, extending the functionality that was previously limited to GPUs in Icicle V2. This guide will assist you in transitioning from ICICLE v2 to v3 by highlighting the key changes and providing examples for both C++ and Rust.","sidebar":"GettingStartedSidebar"},"start/integration-&-support/migrate_from_v3":{"id":"start/integration-&-support/migrate_from_v3","title":"Migration from ICICLE v3 to v4","description":"ICICLE v4 introduces a more intuitive and object-oriented C++ API for field elements, making code more readable and maintainable. This guide will assist you in transitioning from ICICLE v3 to v4 by highlighting the key changes and providing examples for both C++ and Rust.","sidebar":"GettingStartedSidebar"},"start/intro/getting_started":{"id":"start/intro/getting_started","title":"Setup Guide","description":"This guide will walk you through the entire process of building, testing, and installing ICICLE using your preferred programming language","sidebar":"GettingStartedSidebar"},"start/intro/start":{"id":"start/intro/start","title":"Overview","description":"ICICLE is a versatile cryptography library supporting multiple compute backends\u2014including CUDA, CPU, Metal, and upcoming backends like WebGPU, Vulkan, and ZPU. It enables you to build cryptographic applications with ease, leveraging the best available hardware for your needs.","sidebar":"GettingStartedSidebar"},"start/programmers_guide/build_from_source":{"id":"start/programmers_guide/build_from_source","title":"Build ICICLE from source","description":"This guide will help you get started with building, testing, and installing ICICLE, whether you\'re using C++, Rust, or Go. It also covers installation of the CUDA backend and important build options.","sidebar":"GettingStartedSidebar"},"start/programmers_guide/cpp":{"id":"start/programmers_guide/cpp","title":"ICICLE C++ Usage Guide","description":"Overview","sidebar":"GettingStartedSidebar"},"start/programmers_guide/general":{"id":"start/programmers_guide/general","title":"ICICLE Programmer\'s Guide","description":"Compute APIs","sidebar":"GettingStartedSidebar"},"start/programmers_guide/go":{"id":"start/programmers_guide/go","title":"ICICLE Golang Usage Guide","description":"Overview","sidebar":"GettingStartedSidebar"},"start/programmers_guide/rust":{"id":"start/programmers_guide/rust","title":"ICICLE Rust Usage Guide","description":"Overview","sidebar":"GettingStartedSidebar"}}}}')}}]);